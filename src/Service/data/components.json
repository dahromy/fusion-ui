[
  {
    "name": "accordion",
    "files": [
      {
        "name": "content.html.twig",
        "dir": "templates\/components\/ui\/accordion",
        "content": "<div{{ attributes.add(stimulus_target('ui--accordion', 'content')).without('class') }}\r\n        class=\"{{ 'overflow-hidden text-sm data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down'|tailwind_merge }}\"\r\n        hidden\r\n>\r\n    <div class=\"{{ ['pb-4 pt-0', attributes.render('class')]|tailwind_merge }}\">\r\n        {% block content %}{% endblock %}\r\n    <\/div>\r\n<\/div>"
      },
      {
        "name": "default-trigger.html.twig",
        "dir": "templates\/components\/ui\/accordion",
        "content": "<button {{ attributes.add(stimulus_target('ui--accordion', 'trigger')).add(stimulus_action('ui--accordion', 'toggle', 'click')).without('class') }}\r\n        type=\"button\" aria-expanded=\"false\"\r\n        class=\"{{ ['flex flex-1 items-center w-full justify-between py-4 text-sm font-medium transition-all hover:underline [&[data-state=open]>span>svg]:rotate-180', attributes.render('class')]| tailwind_merge }}\"\r\n>\r\n    <p>{% block content %}{% endblock %}<\/p>\r\n    <twig:ui:accordion:icon\/>\r\n<\/button>"
      },
      {
        "name": "icon.html.twig",
        "dir": "templates\/components\/ui\/accordion",
        "content": "<span{{ attributes.add(stimulus_target('ui--accordion', 'icon')).without('class') }} class=\"{{ ['opacity-50', attributes.render('class')] | tailwind_merge }}\">\r\n    {% if block('content') is defined and block('content') is not empty %}\r\n        {% block content %}{% endblock %}\r\n    {% else %}\r\n        <twig:ux:icon name=\"radix-icons:caret-down\"\r\n                      class=\"h-5 w-5 shrink-0 text-muted-foreground transition-transform duration-200\"\/>\r\n    {% endif %}\r\n<\/span>"
      },
      {
        "name": "item.html.twig",
        "dir": "templates\/components\/ui\/accordion",
        "content": "{% props disabled = false %}\r\n\r\n<div{{ attributes.add(stimulus_target('ui--accordion', 'item')).add(stimulus_action('ui--accordion', 'keydown', 'keydown')).without('class') }}\r\n        {% if disabled %} data-disabled {% endif %} data-state=\"closed\"\r\n        class=\"{{ [attributes.render('class') ?? 'border-b st-accordion']|tailwind_merge }}\"\r\n>\r\n    {% block content %}{% endblock %}\r\n<\/div>"
      },
      {
        "name": "root.html.twig",
        "dir": "templates\/components\/ui\/accordion",
        "content": "{% props type = \"single\" %}\r\n\r\n<div{{ attributes.add(stimulus_controller('ui--accordion', { type })) }}>\r\n    {% block content %}{% endblock %}\r\n<\/div>"
      },
      {
        "name": "trigger.html.twig",
        "dir": "templates\/components\/ui\/accordion",
        "content": "<button {{ attributes.add(stimulus_target('ui--accordion', 'trigger')).add(stimulus_action('ui--accordion', 'toggle', 'click')).without('class') }}\r\n        type=\"button\" aria-expanded=\"false\"\r\n        data-state=\"closed\"\r\n        class=\"{{ [attributes.render('class') ?? 'w-full flex flex-1 items-center w-full justify-between py-4 text-sm font-medium transition-all hover:underline [&[data-state=open]>span>svg]:rotate-180']| tailwind_merge }}\"\r\n>\r\n    {% block content %}{% endblock %}\r\n<\/button>"
      },
      {
        "name": "accordion_controller.js",
        "dir": "assets\/js\/components\/ui",
        "content": "import {Controller} from \"@hotwired\/stimulus\";\r\n\r\nconst ACCORDION_KEYS = ['Home', 'End', 'ArrowDown', 'ArrowUp', 'ArrowLeft', 'ArrowRight'];\r\n\r\nexport default class UIAccordion extends Controller {\r\n    static targets = [\"item\", \"trigger\", \"content\"];\r\n    static values = {type: String}\r\n\r\n    initialize() {\r\n        \/\/ validate value type\r\n        if (!['single', 'multiple'].includes(this.typeValue)) {\r\n            throw new Error('Failed prop type: Invalid prop `type` supplied to `accordion:root`. Expected one of `single | multiple`.')\r\n        }\r\n\r\n        this.setIndicesAndStyles(this.itemTargets);\r\n        this.setIndicesAndStyles(this.triggerTargets);\r\n        this.setIndicesAndStyles(this.contentTargets, content => {\r\n            content.style.setProperty('--radix-accordion-content-height', 'var(--radix-collapsible-content-height)');\r\n            content.style.setProperty('--radix-accordion-content-width', 'var(--radix-collapsible-content-width)');\r\n        });\r\n    }\r\n\r\n    setIndicesAndStyles(targetsArray, extraOperation = () => {\r\n    }) {\r\n        targetsArray.forEach((item, index) => {\r\n            item.setAttribute(\"data-index\", index);\r\n            extraOperation(item);\r\n        });\r\n    }\r\n\r\n    keydown(event) {\r\n        if (!ACCORDION_KEYS.includes(event.key)) return;\r\n\r\n        const target = event.target;\r\n        const orientation = this.element.getAttribute(\"data-orientation\");\r\n        const isDirectionLTR = this.element.getAttribute(\"data-direction\") === 'ltr';\r\n        const triggerIndex = parseInt(target.getAttribute(\"data-index\"));\r\n        const triggerCount = this.triggerTargets.length;\r\n\r\n        if (triggerIndex === -1) return;\r\n\r\n        \/\/ Prevents page scroll while user is navigating\r\n        event.preventDefault();\r\n\r\n        let nextIndex = triggerIndex;\r\n        const homeIndex = 0;\r\n        const endIndex = triggerCount - 1;\r\n\r\n        const operations = {\r\n            moveNext: () => {\r\n                nextIndex = triggerIndex + 1;\r\n                nextIndex = nextIndex > endIndex ? homeIndex : nextIndex;\r\n            }, movePrev: () => {\r\n                nextIndex = triggerIndex - 1;\r\n                nextIndex = nextIndex < homeIndex ? endIndex : nextIndex;\r\n            }\r\n        };\r\n        const keyMappings = {\r\n            \"Home\": () => nextIndex = homeIndex, \"End\": () => nextIndex = endIndex, \"ArrowRight\": () => {\r\n                if (orientation === 'horizontal') {\r\n                    isDirectionLTR ? operations.moveNext() : operations.movePrev();\r\n                }\r\n            }, \"ArrowDown\": () => {\r\n                if (orientation === 'vertical') {\r\n                    operations.moveNext();\r\n                }\r\n            }, \"ArrowLeft\": () => {\r\n                if (orientation === 'horizontal') {\r\n                    isDirectionLTR ? operations.movePrev() : operations.moveNext();\r\n                }\r\n            }, \"ArrowUp\": () => {\r\n                if ('vertical' === orientation) {\r\n                    operations.movePrev();\r\n                }\r\n            }\r\n        };\r\n\r\n        const keyFunction = keyMappings[event.key];\r\n        if (keyFunction) {\r\n            keyFunction();\r\n        }\r\n\r\n        const clampedIndex = nextIndex % triggerCount;\r\n        this.triggerTargets[clampedIndex]?.focus();\r\n    }\r\n\r\n    setElementState(element, isOpen) {\r\n        const stateStr = isOpen ? 'open' : 'closed';\r\n        element.dataset.state = stateStr;\r\n    }\r\n\r\n    setInitialContentProperties(contentElement, isOpen) {\r\n        contentElement.hidden = isOpen;\r\n        contentElement.style.setProperty('--radix-collapsible-content-height', contentElement.scrollHeight + \"px\");\r\n        contentElement.style.setProperty('--radix-collapsible-content-width', contentElement.scrollWidth + \"px\");\r\n        contentElement.hasBeenClicked = true;\r\n    }\r\n\r\n    closeLastOpenedElement(index) {\r\n        if (this.lastOpenIndex !== undefined && this.lastOpenIndex !== index) {\r\n            const lastContent = this.contentTargets[this.lastOpenIndex];\r\n            const lastItem = this.itemTargets[this.lastOpenIndex];\r\n            const lastTrigger = this.triggerTargets[this.lastOpenIndex];\r\n\r\n            this.setElementState(lastContent, false);\r\n            this.setElementState(lastItem, false);\r\n            this.setElementState(lastTrigger, false);\r\n\r\n            setTimeout(() => {\r\n                lastContent.hidden = true;\r\n            }, 180);\r\n        }\r\n    }\r\n\r\n    toggle(event) {\r\n        event.preventDefault();\r\n        const trigger = event.currentTarget;\r\n\r\n        const triggerIndex = parseInt(trigger.getAttribute(\"data-index\"));\r\n        const content = this.contentTargets[triggerIndex];\r\n        const item = this.itemTargets[triggerIndex];\r\n\r\n        if (item.hasAttribute('data-disabled')) return;\r\n\r\n        if (this.typeValue !== 'multiple') {\r\n            this.closeLastOpenedElement(triggerIndex);\r\n        }\r\n\r\n        const shouldOpen = content.dataset.state !== 'open';\r\n\r\n        this.setElementState(content, shouldOpen);\r\n        this.setElementState(item, shouldOpen);\r\n        this.setElementState(trigger, shouldOpen);\r\n        trigger.setAttribute('aria-expanded', shouldOpen);\r\n\r\n        if (!content.hasBeenClicked) {\r\n            this.setInitialContentProperties(content, !shouldOpen);\r\n        } else {\r\n            if (!shouldOpen) {\r\n                setTimeout(() => {\r\n                    content.hidden = true;\r\n                }, 180);\r\n            } else {\r\n                content.hidden = false;\r\n            }\r\n        }\r\n\r\n        this.lastOpenIndex = triggerIndex;\r\n    }\r\n}"
      }
    ],
    "iconDependencies": [
      "radix-icons:caret-down"
    ],
    "registryDependencies": [],
    "dependencies": []
  },
  {
    "name": "alert",
    "files": [
      {
        "name": "description.html.twig",
        "dir": "templates\/components\/ui\/alert",
        "content": "<div{{ attributes.without('class') }}\r\n        class=\"{{ ['text-sm [&_p]:leading-relaxed', attributes.render('class')] | tailwind_merge }}\">\r\n    {% block content %}{% endblock %}\r\n<\/div>"
      },
      {
        "name": "root.html.twig",
        "dir": "templates\/components\/ui\/alert",
        "content": "{% props variant = 'default' %}\r\n\r\n{% set alertVariants = cva({\r\n    base: 'backdrop-blur relative w-full rounded-lg border px-4 py-3 text-sm [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground [&>svg~*]:pl-7 ',\r\n    variants: {\r\n        variant: {\r\n            default: \"bg-muted\/20 text-foreground\",\r\n            destructive: \"bg-destructive\/5 border-destructive\/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\r\n            warning: \"bg-warning\/5 border-warning\/50 text-warning dark:border-warning [&>svg]:text-warning\",\r\n            success: \"bg-success\/5 border-success\/50 text-success dark:border-success [&>svg]:text-success\",\r\n        }\r\n    },\r\n    defaultVariants: {\r\n        variant: \"default\",\r\n    },\r\n}) %}\r\n\r\n<div{{ attributes.without('class') }}\r\n        class=\"{{ alertVariants.apply({ variant }, attributes.render('class') ?? '') | tailwind_merge }}\">\r\n    {% block content %}{% endblock %}\r\n<\/div>"
      },
      {
        "name": "title.html.twig",
        "dir": "templates\/components\/ui\/alert",
        "content": "<div{{ attributes.without('class') }}\r\n        class=\"{{ ['mb-1 font-medium leading-none tracking-tight', attributes.render('class')]|tailwind_merge }}\">\r\n    {% block content %}{% endblock %}\r\n<\/div>"
      }
    ],
    "iconDependencies": [],
    "registryDependencies": [],
    "dependencies": []
  },
  {
    "name": "alert-dialog",
    "files": [
      {
        "name": "action.html.twig",
        "dir": "templates\/components\/ui\/alert-dialog",
        "content": "{% set attrs = attributes.add(stimulus_target('ui--alert-dialog', 'action')) %}\r\n\r\n{% component 'ui:button:root' with {...attrs} %}\r\n    {% block content %}{{ block(outerBlocks.content) }}{% endblock %}\r\n{% endcomponent %}"
      },
      {
        "name": "cancel.html.twig",
        "dir": "templates\/components\/ui\/alert-dialog",
        "content": "{% set attrs = attributes.add(stimulus_target('ui--alert-dialog', 'cancel')) %}\r\n\r\n{% component 'ui:button:root' with {...attrs} %}\r\n    {% block content %}{{ block(outerBlocks.content) }}{% endblock %}\r\n{% endcomponent %}"
      },
      {
        "name": "content.html.twig",
        "dir": "templates\/components\/ui\/alert-dialog",
        "content": "<div {{ stimulus_target('ui--alert-dialog', 'wrapper') }} class=\"hidden\">\r\n    <twig:ui:alert-dialog:overlay\/>\r\n    <div {{ attributes.add(stimulus_target('ui--alert-dialog', 'content')).without('class') }}\r\n            role=\"alertdialog\" data-state=\"closed\"\r\n            class=\"{{ [attributes.render('class'), 'fixed left-[50%] top-[50%] z-50 grid gap-4 w-full max-w-lg translate-x-[-50%] translate-y-[-50%]  border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1\/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1\/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg'] | tailwind_merge }}\"\r\n    >\r\n        {% block content %}{% endblock %}\r\n    <\/div>\r\n<\/div>\r\n"
      },
      {
        "name": "description.html.twig",
        "dir": "templates\/components\/ui\/alert-dialog",
        "content": "<div{{ attributes.add(stimulus_target('ui--alert-dialog', 'description')).without('class') }}\r\n        class=\"{{ ['text-sm text-muted-foreground', attributes.render('class')] | tailwind_merge }}\">\r\n    {% block content %}{% endblock %}\r\n<\/div>"
      },
      {
        "name": "footer.html.twig",
        "dir": "templates\/components\/ui\/alert-dialog",
        "content": "<div{{ attributes.add(stimulus_target('ui--alert-dialog', 'footer')).without('class') }}\r\n        class=\"{{ ['flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2', attributes.render('class')] | tailwind_merge }}\">\r\n    {% block content %}{% endblock %}\r\n<\/div>"
      },
      {
        "name": "header.html.twig",
        "dir": "templates\/components\/ui\/alert-dialog",
        "content": "<div{{ attributes.add(stimulus_target('ui--alert-dialog', 'header')).without('class') }}\r\n        class=\"{{ ['flex flex-col space-y-2 text-center sm:text-left', attributes.render('class')] | tailwind_merge }}\">\r\n    {% block content %}{% endblock %}\r\n<\/div>"
      },
      {
        "name": "overlay.html.twig",
        "dir": "templates\/components\/ui\/alert-dialog",
        "content": "<div{{ attributes.add(stimulus_target('ui--alert-dialog', 'overlay')).without('class') }}\r\n        data-state=\"closed\" data-aria-hidden=\"true\" aria-hidden=\"true\"\r\n        class=\"{{ ['fixed inset-0 z-50 bg-black\/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0', attributes.render('class')] | tailwind_merge }}\">\r\n    {% block content %}{% endblock %}\r\n<\/div>"
      },
      {
        "name": "root.html.twig",
        "dir": "templates\/components\/ui\/alert-dialog",
        "content": "<div{{ attributes.add(stimulus_controller('ui--alert-dialog')) }}>\r\n    {% block content %}{% endblock %}\r\n<\/div>"
      },
      {
        "name": "title.html.twig",
        "dir": "templates\/components\/ui\/alert-dialog",
        "content": "<div{{ attributes.add(stimulus_target('ui--alert-dialog', 'title')).without('class') }}\r\n        class=\"{{ ['text-lg font-semibold', attributes.render('class')] | tailwind_merge }}\">\r\n    {% block content %}{% endblock %}\r\n<\/div>"
      },
      {
        "name": "trigger.html.twig",
        "dir": "templates\/components\/ui\/alert-dialog",
        "content": "<div{{ attributes.add(stimulus_target('ui--alert-dialog', 'trigger')).add(stimulus_action('ui--alert-dialog', 'open', 'click')) }}>\r\n    {% block content %}{% endblock %}\r\n<\/div>"
      },
      {
        "name": "alert-dialog_controller.js",
        "dir": "assets\/js\/components\/ui",
        "content": "import '@kanety\/stimulus-static-actions';\r\nimport UIDialog from \".\/dialog_controller.js\";\r\n\r\nexport default class UIAlertDialog extends UIDialog {\r\n    static targets = ['trigger', 'content', 'action', 'cancel', 'overlay', 'wrapper'];\r\n    static actions = [\r\n        ['trigger', 'click->open'],\r\n        ['cancel', 'click->close'],\r\n        ['action', 'click->close'],\r\n    ];\r\n\r\n    connect() {\r\n        this.removeAction('overlay', 'click->close')\r\n    }\r\n}"
      }
    ],
    "iconDependencies": [],
    "registryDependencies": [
      "dialog"
    ],
    "dependencies": []
  },
  {
    "name": "aspect-ratio",
    "files": [
      {
        "name": "root.html.twig",
        "dir": "templates\/components\/ui\/aspect-ratio",
        "content": "{% props ratio = \"1\/1\" %}\r\n\r\n{% set aspectRatioArray = ratio|split('\/') %}\r\n{% set result = (aspectRatioArray[1]|number_format)\/(aspectRatioArray[0]|number_format)*100 %}\r\n\r\n<div class=\"relative w-full\" style=\"padding-bottom: {{ result }}%;\">\r\n    <div{{ attributes.without('class') }}\r\n            class=\"{{ ['bg-muted absolute inset-0 [&>img]:object-cover [&>img]:absolute [&>img]:h-full [&>img]:w-full [&>img]:inset-0 [&>img]:text-transparent', attributes.render('class')] | tailwind_merge }}\">\r\n        {% block content %}{% endblock %}\r\n    <\/div>\r\n<\/div>"
      }
    ],
    "iconDependencies": [],
    "registryDependencies": [],
    "dependencies": []
  },
  {
    "name": "avatar",
    "files": [
      {
        "name": "fallback.html.twig",
        "dir": "templates\/components\/ui\/avatar",
        "content": "{% props delay = 0 %}\r\n\r\n<span hidden {{ attributes.add(stimulus_target('ui--avatar', 'fallback')).without('class') }} data-delay=\"{{ delay }}\"\r\n      class=\"{{ ['flex h-full w-full items-center justify-center rounded-full bg-muted', attributes.render('class')] | tailwind_merge }}\">\r\n    {% block content %}{% endblock %}\r\n<\/span>"
      },
      {
        "name": "image.html.twig",
        "dir": "templates\/components\/ui\/avatar",
        "content": "<img {{ attributes.add(stimulus_target('ui--avatar', 'image')).without('class') }}\r\n        loading=\"lazy\"\r\n        class=\"{{ ['aspect-square h-full w-full', attributes.render('class')] | tailwind_merge }}\"\r\n        hidden>"
      },
      {
        "name": "root.html.twig",
        "dir": "templates\/components\/ui\/avatar",
        "content": "{% props size = 'md' %}\r\n\r\n{% set avatarVariants = cva({\r\n    base: 'relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full',\r\n    variants: {\r\n        size: {\r\n            xs: \"h-4 w-4 text-[0.5rem]\",\r\n            sm: \"h-6 w-6 text-xs\",\r\n            md: \"h-10 w-10 text-base\",\r\n            lg: \"h-14 w-14 text-xl\",\r\n            xl: \"h-20 w-20 text-3xl\"\r\n        }\r\n    },\r\n    defaultVariants: {\r\n        size: \"md\"\r\n    },\r\n}) %}\r\n\r\n<span {{ attributes.add(stimulus_controller('ui--avatar')).without('class') }} class=\"{{ avatarVariants.apply({size}, attributes.render('class') ?? '') | tailwind_merge }}\">\r\n    {% block content %}{% endblock %}\r\n<\/span>"
      },
      {
        "name": "avatar_controller.js",
        "dir": "assets\/js\/components\/ui",
        "content": "import {Controller} from \"@hotwired\/stimulus\";\r\n\r\nconst LOADING_STATUS = ['idle', 'loading', 'loaded', 'failed']\r\n\r\nexport default class UIAvatar extends Controller {\r\n    static targets = ['image', 'fallback']\r\n    static values = {\r\n        status: {type: String, default: LOADING_STATUS[0]},\r\n    }\r\n\r\n    initialize() {\r\n        this.src = this.imageTarget.src\r\n        this.delay = this.fallbackTarget.dataset.delay\r\n    }\r\n\r\n    async connect() {\r\n        this.waitAndLoadImage(this.delay, this.src)\r\n    }\r\n\r\n    waitAndLoadImage(delay, src) {\r\n        if (Number(delay) !== 0) {\r\n            window.setTimeout(() => {\r\n                this.imageLoadingStatus(src)\r\n            }, delay)\r\n        } else {\r\n            this.imageLoadingStatus(src)\r\n        }\r\n    }\r\n\r\n    statusValueChanged() {\r\n        this.handleVisibility(LOADING_STATUS[2], false, true)\r\n        this.handleVisibility(LOADING_STATUS[3], true, false)\r\n    }\r\n\r\n    handleVisibility(status, imageHidden, fallbackHidden) {\r\n        if (this.statusValue === status) {\r\n            this.imageTarget.hidden = imageHidden\r\n            this.fallbackTarget.hidden = fallbackHidden\r\n        }\r\n    }\r\n\r\n    imageLoadingStatus(src) {\r\n        if (!src) {\r\n            this.statusValue = LOADING_STATUS[3];\r\n            return;\r\n        }\r\n        this.loadImage(src)\r\n    }\r\n\r\n    loadImage(src) {\r\n        const image = new window.Image()\r\n        const updateStatus = (status) => {\r\n            if (this.statusValue === LOADING_STATUS[3]) return;\r\n            this.statusValue = status\r\n        }\r\n\r\n        this.statusValue = LOADING_STATUS[1]\r\n        image.onload = () => updateStatus(LOADING_STATUS[2])\r\n        image.onerror = () => updateStatus(LOADING_STATUS[3])\r\n        image.src = src\r\n    }\r\n}"
      }
    ],
    "iconDependencies": [],
    "registryDependencies": [],
    "dependencies": []
  },
  {
    "name": "badge",
    "files": [
      {
        "name": "root.html.twig",
        "dir": "templates\/components\/ui\/badge",
        "content": "{% props variant = 'default', size = 'md' %}\r\n\r\n{% set badgeVariants = cva({\r\n    base: 'inline-flex items-center rounded-md border px-2 py-0.5 font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2',\r\n    variants: {\r\n        variant: {\r\n            default: \"border-primary bg-primary text-primary-foreground hover:bg-primary\/80\",\r\n            secondary:\"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary\/80\",\r\n            destructive:\"text-destructive border-destructive\/50 bg-destructive\/10 hover:bg-destructive\/20\",\r\n            outline: \"text-foreground hover:bg-foreground\/5\",\r\n            success: \"text-success border-success\/50 bg-success\/10 hover:bg-success\/20\",\r\n            warning: \"text-warning border-warning\/50 bg-warning\/10 hover:bg-warning\/20\",\r\n            slate: \"text-slate-500 border-slate-500\/50 bg-slate-500\/10 hover:bg-slate-500\/20\",\r\n            gray: \"text-gray-500 border-gray-500\/50 bg-gray-500\/10 hover:bg-gray-500\/20\",\r\n            zinc: \"text-zinc-500 border-zinc-500\/50 bg-zinc-500\/10 hover:bg-zinc-500\/20\",\r\n            neutral: \"text-neutral-500 border-neutral-500\/50 bg-neutral-500\/10 hover:bg-neutral-500\/20\",\r\n            stone: \"text-stone-500 border-stone-500\/50 bg-stone-500\/10 hover:bg-stone-500\/20\",\r\n            red: \"text-red-500 border-red-500\/50 bg-red-500\/10 hover:bg-red-500\/20\",\r\n            orange: \"text-orange-500 border-orange-500\/50 bg-orange-500\/10 hover:bg-orange-500\/20\",\r\n            amber: \"text-amber-500 border-amber-500\/50 bg-amber-500\/10 hover:bg-amber-500\/20\",\r\n            yellow: \"text-yellow-500 border-yellow-500\/50 bg-yellow-500\/10 hover:bg-yellow-500\/20\",\r\n            lime: \"text-lime-500 border-lime-500\/50 bg-lime-500\/10 hover:bg-lime-500\/20\",\r\n            green: \"text-green-500 border-green-500\/50 bg-green-500\/10 hover:bg-green-500\/20\",\r\n            emerald: \"text-emerald-500 border-emerald-500\/50 bg-emerald-500\/10 hover:bg-emerald-500\/20\",\r\n            teal: \"text-teal-500 border-teal-500\/50 bg-teal-500\/10 hover:bg-teal-500\/20\",\r\n            cyan: \"text-cyan-500 border-cyan-500\/50 bg-cyan-500\/10 hover:bg-cyan-500\/20\",\r\n            sky: \"text-sky-500 border-sky-500\/50 bg-sky-500\/10 hover:bg-sky-500\/20\",\r\n            blue: \"text-blue-500 border-blue-500\/50 bg-blue-500\/10 hover:bg-blue-500\/20\",\r\n            indigo: \"text-indigo-500 border-indigo-500\/50 bg-indigo-500\/10 hover:bg-indigo-500\/20\",\r\n            violet: \"text-violet-500 border-violet-500\/50 bg-violet-500\/10 hover:bg-violet-500\/20\",\r\n            purple: \"text-purple-500 border-purple-500\/50 bg-purple-500\/10 hover:bg-purple-500\/20\",\r\n            fuchsia: \"text-fuchsia-500 border-fuchsia-500\/50 bg-fuchsia-500\/10 hover:bg-fuchsia-500\/20\",\r\n            pink: \"text-pink-500 border-pink-500\/50 bg-pink-500\/10 hover:bg-pink-500\/20\",\r\n            rose: \"text-rose-500 border-rose-500\/50 bg-rose-500\/10 hover:bg-rose-500\/20\",\r\n        },\r\n        size: {\r\n            sm: \"h-4 text-xs\",\r\n            md: \"h-6 py-0.5 text-xs\",\r\n            lg: \"h-8 text-sm\",\r\n            xl: \"h-10 text-base\",\r\n        }\r\n    },\r\n    defaultVariants: {\r\n        variant: \"default\",\r\n        size: \"md\"\r\n    },\r\n}) %}\r\n\r\n<div{{ attributes.without('class') }}\r\n        class=\"{{ badgeVariants.apply({ variant, size }, attributes.render('class') ?? '') | tailwind_merge }}\">\r\n    {% block content %}{% endblock %}\r\n<\/div>"
      }
    ],
    "iconDependencies": [],
    "registryDependencies": [],
    "dependencies": []
  },
  {
    "name": "breadcrumb",
    "files": [
      {
        "name": "ellipsis.html.twig",
        "dir": "templates\/components\/ui\/breadcrumb",
        "content": "<span role=\"presentation\"\r\n      aria-hidden=\"true\"\r\n      class=\"{{ ['flex h-9 w-9 items-center justify-center', attributes.render('class')] |tailwind_merge }}\"\r\n    {{ attributes.without('class') }}\r\n>\r\n    <twig:ux:icon name=\"radix-icons:dots-horizontal\" class=\"h-4 w-4\"\/>\r\n    <span class=\"sr-only\">More<\/span>\r\n<\/span>"
      },
      {
        "name": "item.html.twig",
        "dir": "templates\/components\/ui\/breadcrumb",
        "content": "<li {{ attributes.without('class') }} class=\"{{ ['inline-flex items-center gap-1.5', attributes.render('class')] | tailwind_merge }}\">\r\n    {% block content %}{% endblock %}\r\n<\/li>"
      },
      {
        "name": "link.html.twig",
        "dir": "templates\/components\/ui\/breadcrumb",
        "content": "<a {{ attributes.without('class') }}\r\n        class=\"{{ ['transition-colors hover:text-foreground', attributes.render('class')] | tailwind_merge }}\">\r\n    {% block content %}{% endblock %}\r\n<\/a>"
      },
      {
        "name": "list.html.twig",
        "dir": "templates\/components\/ui\/breadcrumb",
        "content": "<ol {{ attributes.without('class') }}\r\n        class=\"{{ ['flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5', attributes.render('class')] | tailwind_merge }}\">\r\n    {% block content %}{% endblock %}\r\n<\/ol>"
      },
      {
        "name": "page.html.twig",
        "dir": "templates\/components\/ui\/breadcrumb",
        "content": "<span {{ attributes.without('class') }}\r\n        class=\"{{ ['font-normal text-foreground', attributes.render('class')] | tailwind_merge }}\"\r\n        role=\"link\"\r\n        aria-disabled=\"true\"\r\n        aria-current=\"page\"\r\n>\r\n    {% block content %}{% endblock %}\r\n<\/span>"
      },
      {
        "name": "root.html.twig",
        "dir": "templates\/components\/ui\/breadcrumb",
        "content": "<nav {{ attributes }} aria-label=\"breadcrumb\">\r\n    {% block content %}{% endblock %}\r\n<\/nav>"
      },
      {
        "name": "separator.html.twig",
        "dir": "templates\/components\/ui\/breadcrumb",
        "content": "<li {{ attributes.without('class') }}\r\n        role=\"presentation\"\r\n        aria-hidden=\"true\"\r\n        class=\"{{ ['[&>svg]:size-3.5', attributes.render('class')] |tailwind_merge }}\">\r\n    {% block content %}\r\n        <twig:ux:icon name=\"radix-icons:chevron-right\"\/>\r\n    {% endblock %}\r\n<\/li>"
      }
    ],
    "iconDependencies": [
      "radix-icons:dots-horizontal",
      "radix-icons:chevron-right"
    ],
    "registryDependencies": [],
    "dependencies": []
  },
  {
    "name": "button",
    "files": [
      {
        "name": "root.html.twig",
        "dir": "templates\/components\/ui\/button",
        "content": "{% props variant = 'default', size = 'default' %}\r\n\r\n{% set buttonVariants = cva({\r\n    base: 'inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 ',\r\n    variants: {\r\n        variant: {\r\n            default:\"bg-primary text-primary-foreground shadow hover:bg-primary\/90\",\r\n            destructive:\"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive\/90\",\r\n            outline:\"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\r\n            secondary:\"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary\/80\",\r\n            ghost: \"hover:bg-accent hover:text-accent-foreground\",\r\n            link: \"text-primary underline-offset-4 hover:underline\",\r\n        },\r\n        size: {\r\n            default: \"h-9 px-4 py-2\",\r\n            sm: \"h-8 rounded-md px-3 text-xs\",\r\n            lg: \"h-10 rounded-md px-8\",\r\n            icon: \"h-9 w-9\",\r\n        },\r\n    },\r\n    defaultVariants: {\r\n        variant: \"default\",\r\n        size: \"default\",\r\n    },\r\n}) %}\r\n\r\n{% set hasHref = attributes.all.href is defined %}\r\n{% set slot = hasHref ? 'a' : 'button' %}\r\n\r\n<{{ slot }}{{ attributes.without('class') }} class=\"{{ buttonVariants.apply({ variant, size }, attributes.render('class') ?? '') | tailwind_merge }}\">\r\n    {% block content %}{% endblock %}\r\n<\/{{ slot }}>"
      }
    ],
    "iconDependencies": [],
    "registryDependencies": [],
    "dependencies": []
  },
  {
    "name": "card",
    "files": [
      {
        "name": "content.html.twig",
        "dir": "templates\/components\/ui\/card",
        "content": "<div{{ attributes.without('class') }}\r\n        class=\"{{ ['p-6 pt-0', attributes.render('class')] |tailwind_merge }}\">\r\n    {% block content %}{% endblock %}\r\n<\/div>"
      },
      {
        "name": "description.html.twig",
        "dir": "templates\/components\/ui\/card",
        "content": "<div{{ attributes.without('class') }}\r\n        class=\"{{ ['text-sm text-muted-foreground', attributes.render('class')] |tailwind_merge }}\">\r\n    {% block content %}{% endblock %}\r\n<\/div>"
      },
      {
        "name": "footer.html.twig",
        "dir": "templates\/components\/ui\/card",
        "content": "<div{{ attributes.without('class') }}\r\n        class=\"{{ ['flex items-center p-6 pt-0', attributes.render('class')] |tailwind_merge }}\">\r\n    {% block content %}{% endblock %}\r\n<\/div>"
      },
      {
        "name": "header.html.twig",
        "dir": "templates\/components\/ui\/card",
        "content": "<div{{ attributes.without('class') }}\r\n        class=\"{{ ['flex flex-col space-y-1.5 p-6', attributes.render('class')] |tailwind_merge }}\">\r\n    {% block content %}{% endblock %}\r\n<\/div>"
      },
      {
        "name": "root.html.twig",
        "dir": "templates\/components\/ui\/card",
        "content": "<div{{ attributes.without('class') }}\r\n        class=\"{{ ['rounded-xl border bg-card text-card-foreground shadow', attributes.render('class')] |tailwind_merge }}\">\r\n    {% block content %}{% endblock %}\r\n<\/div>"
      },
      {
        "name": "title.html.twig",
        "dir": "templates\/components\/ui\/card",
        "content": "<div{{ attributes.without('class') }}\r\n        class=\"{{ ['font-semibold leading-none tracking-tight', attributes.render('class')] |tailwind_merge }}\">\r\n    {% block content %}{% endblock %}\r\n<\/div>"
      }
    ],
    "iconDependencies": [],
    "registryDependencies": [],
    "dependencies": []
  },
  {
    "name": "carousel",
    "files": [
      {
        "name": "content.html.twig",
        "dir": "templates\/components\/ui\/carousel",
        "content": "<div class=\"overflow-hidden\" {{ stimulus_target('ui--carousel', 'carousel') }}>\r\n    <div {{ attributes.add(stimulus_target('ui--carousel', 'content')).without('class') }} class=\"{{ ['flex', attributes.render('class')] | tailwind_merge }}\">\r\n        {% block content %}{% endblock %}\r\n    <\/div>\r\n<\/div>"
      },
      {
        "name": "item.html.twig",
        "dir": "templates\/components\/ui\/carousel",
        "content": "<div{{ attributes.add(stimulus_target('ui--carousel', 'item')).without('class') }}\r\n        class=\"{{ ['min-w-0 shrink-0 grow-0 basis-full', attributes.render('class')] | tailwind_merge }}\"\r\n        role=\"group\"\r\n        aria-roledescription=\"slide\"\r\n>\r\n    {% block content %}{% endblock %}\r\n<\/div>"
      },
      {
        "name": "next.html.twig",
        "dir": "templates\/components\/ui\/carousel",
        "content": "{% props variant = 'outline', size = 'icon' %}\r\n\r\n{% set attrs = attributes.add(stimulus_target('ui--carousel', 'next')).without('class').defaults({\r\n    class: [\"absolute h-8 w-8 rounded-full\", attributes.render('class')] | tailwind_merge,\r\n    variant,\r\n    size\r\n}) %}\r\n\r\n{% component 'ui:button:root' with {...attrs} %}\r\n    {% block content %}\r\n        <twig:ux:icon name=\"radix-icons:arrow-right\" class=\"w-4 h-4\"\/>\r\n        <span class=\"sr-only\">Next slide<\/span>\r\n    {% endblock %}\r\n{% endcomponent %}"
      },
      {
        "name": "previous.html.twig",
        "dir": "templates\/components\/ui\/carousel",
        "content": "{% props variant = 'outline', size = 'icon' %}\r\n\r\n{% set attrs = attributes.add(stimulus_target('ui--carousel', 'previous')).without('class').defaults({\r\n    class: [\"absolute h-8 w-8 rounded-full\", attributes.render('class')] | tailwind_merge,\r\n    variant,\r\n    size\r\n}) %}\r\n\r\n{% component 'ui:button:root' with {...attrs} %}\r\n    {% block content %}\r\n        <twig:ux:icon name=\"radix-icons:arrow-left\" class=\"w-4 h-4\"\/>\r\n        <span class=\"sr-only\">Previous slide<\/span>\r\n    {% endblock %}\r\n{% endcomponent %}"
      },
      {
        "name": "root.html.twig",
        "dir": "templates\/components\/ui\/carousel",
        "content": "    {% props opts = {}, orientation = \"horizontal\" %}\r\n\r\n    {% set options = {...opts, axis: orientation == 'horizontal' ? 'x' : 'y'} %}\r\n\r\n    <div{{ attributes.add(stimulus_controller('ui--carousel', {orientation, options})).without('class') }}\r\n            class=\"{{ ['relative', attributes.render('class')] | tailwind_merge }}\"\r\n            role=\"region\"\r\n            aria-roledescription=\"carousel\"\r\n    >\r\n        {% block content %}{% endblock %}\r\n    <\/div>"
      },
      {
        "name": "carousel_controller.js",
        "dir": "assets\/js\/components\/ui",
        "content": "import {Controller} from \"@hotwired\/stimulus\";\r\nimport EmblaCarousel from 'embla-carousel'\r\nimport '@kanety\/stimulus-static-actions';\r\n\r\nexport default class UICarousel extends Controller {\r\n    static targets = ['carousel', 'content', 'item', 'previous', 'next']\r\n    static values = {\r\n        orientation: String,\r\n        options: Object\r\n    }\r\n    static actions = [\r\n        ['previous', 'click->scrollPrev'],\r\n        ['next', 'click->scrollNext'],\r\n    ];\r\n\r\n    initialize() {\r\n        this.api = EmblaCarousel(this.carouselTarget, this.optionsValue)\r\n\r\n        this.updateScrollButtonsState();\r\n        this.updateClasses();\r\n    }\r\n\r\n    scrollPrev() {\r\n        this.api.scrollPrev();\r\n        this.updateScrollButtonsState();\r\n    }\r\n\r\n    scrollNext() {\r\n        this.api.scrollNext();\r\n        this.updateScrollButtonsState();\r\n    }\r\n\r\n    updateScrollButtonsState() {\r\n        this.previousTarget.disabled = !this.api.canScrollPrev();\r\n        this.nextTarget.disabled = !this.api.canScrollNext();\r\n    }\r\n\r\n    updateClasses() {\r\n        const isHorizontal = this.orientationValue === 'horizontal';\r\n\r\n        const contentClass = isHorizontal ? ['-ml-4'] : ['-mt-4', 'flex-col'];\r\n        this.addClassesToElement(this.contentTarget, contentClass);\r\n\r\n        const itemClass = isHorizontal ? ['pl-4'] : ['pt-4'];\r\n        this.itemTargets.forEach(itemTarget => this.addClassesToElement(itemTarget, itemClass));\r\n\r\n        const previousClass = isHorizontal ? ['-left-12', 'top-1\/2', '-translate-y-1\/2'] : ['-top-12', 'left-1\/2', '-translate-x-1\/2', 'rotate-90'];\r\n        this.addClassesToElement(this.previousTarget, previousClass);\r\n\r\n        const nextClass = isHorizontal ? ['-right-12', 'top-1\/2', '-translate-y-1\/2'] : ['-bottom-12', 'left-1\/2', '-translate-x-1\/2', 'rotate-90'];\r\n        this.addClassesToElement(this.nextTarget, nextClass);\r\n    }\r\n\r\n    addClassesToElement(element, classes) {\r\n        classes.forEach(className => element.classList.add(className));\r\n    }\r\n}"
      }
    ],
    "iconDependencies": [
      "radix-icons:arrow-right",
      "radix-icons:arrow-left"
    ],
    "registryDependencies": [],
    "dependencies": [
      "embla-carousel",
      "@kanety\/stimulus-static-actions"
    ]
  },
  {
    "name": "checkbox",
    "files": [
      {
        "name": "indicator.html.twig",
        "dir": "templates\/components\/ui\/checkbox",
        "content": "<span {{ attributes.add(stimulus_target('ui--checkbox', 'indicator')).without('class') }}\r\n        class=\"{{ ['flex items-center justify-center text-current', attributes.render('class')] | tailwind_merge }}\"\r\n        style=\"pointer-events: none; display: none;\"\r\n>\r\n    <twig:ux:icon name=\"radix-icons:check\" class=\"w-4 h-4\"\/>\r\n<\/span>"
      },
      {
        "name": "root.html.twig",
        "dir": "templates\/components\/ui\/checkbox",
        "content": "{% props checked = false, disabled = false, required = false, id = null %}\r\n\r\n{% set isIndeterminate = (checked == 'indeterminate') %}\r\n{% set state = checked ? 'checked' : 'unchecked' %}\r\n\r\n<button {{ attributes.add(stimulus_controller('ui--checkbox', {\r\n    'id': id\r\n})).add(stimulus_target('ui--checkbox', 'button')).without('class') }}\r\n        type=\"button\"\r\n        role=\"checkbox\"\r\n        aria-checked=\"{{ isIndeterminate ? 'mixed' : (checked ? 'true' : 'false') }}\"\r\n        aria-required=\"{{ required ? 'true' : 'false' }}\"\r\n        data-state=\"{{ state }}\"\r\n        data-disabled=\"{{ disabled ? 'true' : 'false' }}\"\r\n        class=\"{{ ['peer h-4 w-4 shrink-0 rounded-sm border border-primary shadow focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground', attributes.render('class')] | tailwind_merge }}\">\r\n    {% block content %}{% endblock %}\r\n<\/button>"
      },
      {
        "name": "checkbox_controller.js",
        "dir": "assets\/js\/components\/ui",
        "content": "import {Controller} from \"@hotwired\/stimulus\";\r\nimport '@kanety\/stimulus-static-actions';\r\n\r\nexport default class UICheckbox extends Controller {\r\n    static targets = ['button', 'indicator'];\r\n    static actions = [['button', 'click->toggle']];\r\n    static values = {id: String};\r\n\r\n    initialize() {\r\n        this.state = this.element.dataset.state;\r\n        this.label = null;\r\n        this.input = null;\r\n        if (this.idValue) {\r\n            this.label = document.querySelector(`label[for=\"${this.idValue}\"]`);\r\n            this.input = document.getElementById(this.idValue);\r\n            this.label && this.label.addEventListener('click', () => this.toggle());\r\n\r\n            if (this.input) {\r\n                this.state = this.input.checked ? 'checked' : 'unchecked';\r\n                this.updateCheckboxAttributes(this.state);\r\n            }\r\n        }\r\n        this.handleState();\r\n    }\r\n\r\n    updateCheckboxAttributes(state) {\r\n        this.buttonTarget.dataset.state = state;\r\n        this.buttonTarget.setAttribute('aria-checked', state === 'checked' ? 'true' : 'false');\r\n        this.indicatorTarget.dataset.state = state;\r\n    }\r\n\r\n    getCheckboxState() {\r\n        return this.state === 'checked' ? 'unchecked' : 'checked';\r\n    }\r\n\r\n    handleState() {\r\n        this.state === 'checked' ? this.handleChecked() : this.handleUnchecked();\r\n        this.state === 'indeterminate' ? this.handleIndeterminate() : null;\r\n    }\r\n\r\n    handleChecked() {\r\n        this.indicatorTarget.style.removeProperty('display');\r\n    }\r\n\r\n    handleUnchecked() {\r\n        this.indicatorTarget.style.display = 'none';\r\n    }\r\n\r\n    toggle() {\r\n        this.state = this.getCheckboxState();\r\n        this.updateCheckboxAttributes(this.state);\r\n        this.handleState();\r\n\r\n        if (this.input) {\r\n            this.input.checked = this.state === 'checked';\r\n\r\n            this.input.dispatchEvent(new Event('input', {bubbles: true}));\r\n            this.input.dispatchEvent(new Event('change', {bubbles: true}));\r\n        }\r\n    }\r\n\r\n    handleIndeterminate() {\r\n        this.indicatorTarget.style.removeProperty('display');\r\n    }\r\n}"
      }
    ],
    "iconDependencies": [
      "radix-icons:check"
    ],
    "registryDependencies": [],
    "dependencies": [
      "@kanety\/stimulus-static-actions"
    ]
  },
  {
    "name": "collapsible",
    "files": [
      {
        "name": "content.html.twig",
        "dir": "templates\/components\/ui\/collapsible",
        "content": "<div{{ attributes.add(stimulus_target('ui--collapsible', 'content')) }} data-state=\"closed\" hidden>\r\n    {% block content %}{% endblock %}\r\n<\/div>"
      },
      {
        "name": "root.html.twig",
        "dir": "templates\/components\/ui\/collapsible",
        "content": "<div{{ attributes.add(stimulus_controller('ui--collapsible')) }} data-state=\"closed\">\r\n    {% block content %}{% endblock %}\r\n<\/div>"
      },
      {
        "name": "trigger.html.twig",
        "dir": "templates\/components\/ui\/collapsible",
        "content": "{% set attrs = attributes.add(stimulus_target('ui--collapsible', 'trigger')).defaults({\r\n    'aria-expanded': 'false',\r\n    'data-state': 'closed',\r\n}) %}\r\n\r\n{% component 'ui:button:root' with {...attrs} %}\r\n    {% block content %}{{ block(outerBlocks.content) }}{% endblock %}\r\n{% endcomponent %}"
      },
      {
        "name": "collapsible_controller.js",
        "dir": "assets\/js\/components\/ui",
        "content": "import {Controller} from \"@hotwired\/stimulus\";\r\nimport '@kanety\/stimulus-static-actions';\r\n\r\nexport default class UICollapsible extends Controller {\r\n    static targets = ['trigger', 'content'];\r\n    static actions = [\r\n        ['trigger', 'click->toggle']\r\n    ];\r\n\r\n    setDataState(target, state) {\r\n        target.setAttribute('data-state', state);\r\n    }\r\n\r\n    setAriaAttributes(target, expanded) {\r\n        target.setAttribute('aria-expanded', expanded);\r\n    }\r\n\r\n    toggle() {\r\n        const active = this.element.dataset.state === 'active';\r\n        this.contentTarget.hidden = active;\r\n\r\n        this.setDataState(this.element, active ? 'closed' : 'active');\r\n        this.setDataState(this.triggerTarget, active ? 'closed' : 'active');\r\n        this.setDataState(this.contentTarget, active ? 'closed' : 'active');\r\n        this.setAriaAttributes(this.triggerTarget, active ? 'false' : 'true');\r\n    }\r\n}"
      }
    ],
    "iconDependencies": [],
    "registryDependencies": [],
    "dependencies": [
      "@kanety\/stimulus-static-actions"
    ]
  },
  {
    "name": "dialog",
    "files": [
      {
        "name": "close.html.twig",
        "dir": "templates\/components\/ui\/dialog",
        "content": "<div {{ attributes.add(stimulus_target('ui--dialog', 'close')).without('class') }}\r\n        class=\"{{ ['', attributes.render('class')] | tailwind_merge }}\" data-state=\"closed\">\r\n    {% block content %}{% endblock %}\r\n<\/div>"
      },
      {
        "name": "content.html.twig",
        "dir": "templates\/components\/ui\/dialog",
        "content": "<div {{ stimulus_target('ui--dialog', 'wrapper') }} data-state=\"closed\" class=\"hidden\">\r\n    <twig:ui:dialog:overlay\/>\r\n    <div {{ attributes.add(stimulus_target('ui--dialog', 'content')).without('class') }}\r\n            data-state=\"closed\"\r\n            class=\"{{ ['fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1\/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1\/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg', attributes.render('class')] | tailwind_merge }}\">\r\n        {% block content %}{% endblock %}\r\n        <twig:ui:dialog:close class=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\r\n            <twig:ux:icon name=\"radix-icons:cross-2\" class=\"h-4 w-4\"\/>\r\n            <span class=\"sr-only\">Close<\/span>\r\n        <\/twig:ui:dialog:close>\r\n    <\/div>\r\n<\/div>"
      },
      {
        "name": "description.html.twig",
        "dir": "templates\/components\/ui\/dialog",
        "content": "<div {{ attributes.add(stimulus_target('ui--dialog', 'description')).without('class') }}\r\n        class=\"{{ ['text-sm text-muted-foreground', attributes.render('class')] | tailwind_merge }}\">\r\n    {% block content %}{% endblock %}\r\n<\/div>"
      },
      {
        "name": "footer.html.twig",
        "dir": "templates\/components\/ui\/dialog",
        "content": "<div {{ attributes.add(stimulus_target('ui--dialog', 'footer')).without('class') }}\r\n        class=\"{{ ['flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2', attributes.render('class')] | tailwind_merge }}\">\r\n    {% block content %}{% endblock %}\r\n<\/div>"
      },
      {
        "name": "header.html.twig",
        "dir": "templates\/components\/ui\/dialog",
        "content": "<div {{ attributes.add(stimulus_target('ui--dialog', 'header')).without('class') }}\r\n        class=\"{{ ['flex flex-col space-y-1.5 text-center sm:text-left', attributes.render('class')] | tailwind_merge }}\">\r\n    {% block content %}{% endblock %}\r\n<\/div>"
      },
      {
        "name": "overlay.html.twig",
        "dir": "templates\/components\/ui\/dialog",
        "content": "<div {{ attributes.add(stimulus_target('ui--dialog', 'overlay')).without('class') }} data-state=\"closed\"\r\n        class=\"{{ ['fixed inset-0 z-50 bg-black\/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0', attributes.render('class')] | tailwind_merge }}\">\r\n    {% block content %}{% endblock %}\r\n<\/div>"
      },
      {
        "name": "root.html.twig",
        "dir": "templates\/components\/ui\/dialog",
        "content": "<div {{ attributes.add(stimulus_controller('ui--dialog')).without('class') }} data-state=\"closed\" class=\"{{ ['', attributes.render('class')] |tailwind_merge }}\">\r\n    {% block content %}{% endblock %}\r\n<\/div>"
      },
      {
        "name": "title.html.twig",
        "dir": "templates\/components\/ui\/dialog",
        "content": "<div {{ attributes.add(stimulus_target('ui--dialog', 'title')).without('class') }}\r\n        class=\"{{ ['text-lg font-semibold leading-none tracking-tight', attributes.render('class')] | tailwind_merge }}\">\r\n    {% block content %}{% endblock %}\r\n<\/div>"
      },
      {
        "name": "trigger.html.twig",
        "dir": "templates\/components\/ui\/dialog",
        "content": "<div {{ attributes.add(stimulus_target('ui--dialog', 'trigger')).without('class') }}\r\n        data-state=\"closed\"\r\n        class=\"{{ ['', attributes.render('class')] | tailwind_merge }}\">\r\n    {% block content %}{% endblock %}\r\n<\/div>"
      },
      {
        "name": "dialog_controller.js",
        "dir": "assets\/js\/components\/ui",
        "content": "import {Controller} from \"@hotwired\/stimulus\";\r\nimport '@kanety\/stimulus-static-actions'\r\n\r\nexport default class UIDialog extends Controller {\r\n    static targets = ['trigger', 'wrapper', 'content', 'close', 'overlay']\r\n    static actions = [\r\n        ['trigger', 'click->open'],\r\n        ['close', 'click->close'],\r\n        ['overlay', 'click->close']\r\n    ]\r\n\r\n    open() {\r\n        this.wrapperTarget.classList.remove('hidden')\r\n        this.setElementsState('open');\r\n    }\r\n\r\n    close(event) {\r\n        this.setElementsState('closed', true);\r\n    }\r\n\r\n    setElementsState(state, isClosing = false) {\r\n        const elements = [this.overlayTarget, this.element, this.triggerTarget, this.contentTarget, ...this.closeTargets];\r\n\r\n        if (!isClosing) { \/\/ if not closing, add wrapperTarget to elements\r\n            elements.push(this.wrapperTarget);\r\n        }\r\n\r\n        elements.forEach((target) => {\r\n            target.dataset.state = state;\r\n        })\r\n\r\n        if (isClosing) {\r\n            this.delayedCloseWrapper(state);\r\n        }\r\n    }\r\n\r\n    delayedCloseWrapper(state) {\r\n        setTimeout(() => {\r\n            this.wrapperTarget.dataset.state = state;\r\n            this.wrapperTarget.classList.add('hidden');\r\n        }, 120);\r\n    }\r\n\r\n    removeAction(name, descriptor){\r\n        this.context.actionSet.actions.forEach((action) => {\r\n            if (action.name === name && action.descriptor === descriptor){\r\n                const target = `this.${name}Target`\r\n                this.context.actionSet.removeAction(eval(target), action)\r\n            }\r\n        })\r\n    }\r\n}"
      }
    ],
    "iconDependencies": [
      "radix-icons:cross-2"
    ],
    "registryDependencies": [],
    "dependencies": [
      "@kanety\/stimulus-static-actions"
    ]
  },
  {
    "name": "dropdown-menu",
    "files": [
      {
        "name": "checkbox-item.html.twig",
        "dir": "templates\/components\/ui\/dropdown-menu",
        "content": "<div {{ attributes.without('class') }}\r\n        role=\"menuitemcheckbox\"\r\n        class=\"{{ [\r\n            'relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50',\r\n            attributes.render('class')\r\n        ] | tailwind_merge }}\"\r\n        data-state=\"checked\" tabindex=\"-1\" data-orientation=\"vertical\">\r\n    <span class=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\r\n        <span data-state=\"checked\">\r\n            <twig:ux:icon name=\"radix-icons:check\" class=\"h-4 w-4\"\/>\r\n        <\/span>\r\n    <\/span>\r\n    {% block content %}{% endblock %}\r\n<\/div>"
      },
      {
        "name": "content.html.twig",
        "dir": "templates\/components\/ui\/dropdown-menu",
        "content": "<div {{ stimulus_target('ui--popover', 'wrapper') }} class=\"hidden\">\r\n    <div {{ attributes.add(stimulus_target('ui--popover', 'content')).without('class') }}\r\n            data-state=\"open\"\r\n            role=\"dialog\"\r\n            data-side=\"{{ outerScope.placement }}\"\r\n            tabindex=\"-1\"\r\n            class=\"{{ [\r\n                'z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md',\r\n                'data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2',\r\n                attributes.render('class')] | tailwind_merge }}\">\r\n        {% block content %}{% endblock %}\r\n    <\/div>\r\n<\/div>"
      },
      {
        "name": "group.html.twig",
        "dir": "templates\/components\/ui\/dropdown-menu",
        "content": "<div {{ attributes }} role=\"group\">\r\n    {% block content %}{% endblock %}\r\n<\/div>"
      },
      {
        "name": "item.html.twig",
        "dir": "templates\/components\/ui\/dropdown-menu",
        "content": "{% props inset = false, asLink = false, asButton = false %}\r\n{% set asLink = attributes.all.href is defined %}\r\n\r\n{% if asLink %}\r\n    {% set slot = 'a' %}\r\n{% elseif asButton %}\r\n    {% set slot = 'button' %}\r\n{% else %}\r\n    {% set slot = 'div' %}\r\n{% endif %}\r\n\r\n<{{ slot }} {{ attributes.without('class') }}\r\n        role=\"menuitem\"\r\n        class=\"{{ [\r\n            'relative flex cursor-default text-foreground select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground hover:bg-accent hover:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50',\r\n            inset ? 'pl-8' : '',\r\n            attributes.render('class')\r\n        ] | tailwind_merge }}\">\r\n    {% block content %}{% endblock %}\r\n<\/{{ slot }}>"
      },
      {
        "name": "label.html.twig",
        "dir": "templates\/components\/ui\/dropdown-menu",
        "content": "{% props inset = false %}\r\n\r\n<div {{ attributes.without('class') }}\r\n    class=\"{{ [\r\n        'px-2 py-1.5 text-foreground text-sm font-semibold',\r\n        inset ? 'pl-8' : '',\r\n        attributes.render('class')\r\n    ] | tailwind_merge}}\"\r\n>\r\n    {% block content %}{% endblock %}\r\n<\/div>"
      },
      {
        "name": "portal.html.twig",
        "dir": "templates\/components\/ui\/dropdown-menu",
        "content": "<div {{ attributes }}>\r\n    {% block content %}{% endblock %}\r\n<\/div>"
      },
      {
        "name": "radio-group.html.twig",
        "dir": "templates\/components\/ui\/dropdown-menu",
        "content": "<div {{ attributes }} role=\"group\">\r\n    {% block content %}{% endblock %}\r\n<\/div>"
      },
      {
        "name": "radio-item.html.twig",
        "dir": "templates\/components\/ui\/dropdown-menu",
        "content": "<div {{ attributes.without('class') }}\r\n    role=\"menuitemradio\"\r\n     class=\"{{ [\r\n        'relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50',\r\n        attributes.render('class')\r\n     ] | tailwind_merge }}\"\r\n     data-state=\"checked\" tabindex=\"-1\">\r\n    <span class=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\r\n        <span data-state=\"checked\">\r\n            <twig:ux:icon name=\"radix-icons:dot-filled\" class=\"h-4 w-4 fill-current\"\/>\r\n        <\/span>\r\n    <\/span>\r\n    {% block content %}{% endblock %}\r\n<\/div>"
      },
      {
        "name": "root.html.twig",
        "dir": "templates\/components\/ui\/dropdown-menu",
        "content": "{% props placement = 'bottom', trigger = 'click', dismissAfter = null, matchWidth = false %}\r\n\r\n<div {{ attributes.add(stimulus_controller('ui--popover', { placement, trigger, dismissAfter, matchWidth })) }} data-state=\"closed\">\r\n    {% block content %}{% endblock %}\r\n<\/div>"
      },
      {
        "name": "separator.html.twig",
        "dir": "templates\/components\/ui\/dropdown-menu",
        "content": "<div {{ attributes.without('class') }}\r\n        class=\"{{ [\r\n            '-mx-1 my-1 h-px bg-muted',\r\n            attributes.render('class')\r\n        ]  | tailwind_merge}}\"\r\n><\/div>"
      },
      {
        "name": "shortcut.html.twig",
        "dir": "templates\/components\/ui\/dropdown-menu",
        "content": "<span {{ attributes.without('class') }} class=\"{{ [\r\n    'ml-auto text-xs tracking-widest opacity-60',\r\n    attributes.render('class')\r\n] | tailwind_merge }}\">\r\n    {% block content %}{% endblock %}\r\n<\/span>"
      },
      {
        "name": "sub-content.html.twig",
        "dir": "templates\/components\/ui\/dropdown-menu",
        "content": "<div {{ stimulus_target('ui--popover', 'wrapper') }} class=\"hidden\">\r\n    <div {{ attributes.add(stimulus_target('ui--popover', 'content')).without('class') }}\r\n            data-state=\"open\"\r\n            role=\"dialog\"\r\n            data-side=\"{{ outerScope.placement }}\"\r\n            tabindex=\"-1\"\r\n            class=\"{{ ['z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2', attributes.render('class')] | tailwind_merge }}\">\r\n        {% block content %}{% endblock %}\r\n    <\/div>\r\n<\/div>"
      },
      {
        "name": "sub-trigger.html.twig",
        "dir": "templates\/components\/ui\/dropdown-menu",
        "content": "{% props inset = false %}\r\n\r\n{% if outerScope.trigger == 'hover' %}\r\n    {% set action = stimulus_action('ui--popover', 'toggle', 'mouseenter')|stimulus_action('ui--popover', 'hide', 'focusout') %}\r\n{% elseif outerScope.trigger == 'focus' %}\r\n    {% set action = stimulus_action('ui--popover', 'toggle', 'focusin') %}\r\n{% else %}\r\n    {% set action = stimulus_action('ui--popover', 'toggle', outerScope.trigger) %}\r\n{% endif %}\r\n\r\n<div{{ attributes.add(stimulus_target('ui--popover', 'trigger')).add(action).without('class') }}\r\n        class=\"{{ [\r\n            'flex cursor-default select-none text-foreground items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent hover:bg-accent data-[state=open]:bg-accent',\r\n            inset ? 'pl-8' : '',\r\n            attributes.render('class')] |tailwind_merge }}\">\r\n    {% block content %}{% endblock %}\r\n    <twig:ux:icon name=\"radix-icons:chevron-right\" class=\"ml-auto h-4 w-4\"\/>\r\n<\/div>"
      },
      {
        "name": "sub.html.twig",
        "dir": "templates\/components\/ui\/dropdown-menu",
        "content": "{% props placement = 'right-start', trigger = 'click', dismissAfter = null, matchWidth = false %}\r\n\r\n<div {{ attributes.add(stimulus_controller('ui--popover', { placement, trigger, dismissAfter, matchWidth, offset: [0,8] })) }} data-state=\"closed\">\r\n    {% block content %}{% endblock %}\r\n<\/div>"
      },
      {
        "name": "trigger.html.twig",
        "dir": "templates\/components\/ui\/dropdown-menu",
        "content": "{% if outerScope.trigger == 'hover' %}\r\n    {% set action = stimulus_action('ui--popover', 'toggle', 'mouseenter') %}\r\n{% elseif outerScope.trigger == 'focus' %}\r\n    {% set action = stimulus_action('ui--popover', 'toggle', 'focusin') %}\r\n{% else %}\r\n    {% set action = stimulus_action('ui--popover', 'toggle', outerScope.trigger) %}\r\n{% endif %}\r\n\r\n<div{{ attributes.add(stimulus_target('ui--popover', 'trigger')).add(action) }}>\r\n    {% block content %}{% endblock %}\r\n<\/div>"
      }
    ],
    "iconDependencies": [
      "radix-icons:check",
      "radix-icons:dot-filled",
      "radix-icons:chevron-right"
    ],
    "registryDependencies": [],
    "dependencies": []
  },
  {
    "name": "hover-card",
    "files": [
      {
        "name": "content.html.twig",
        "dir": "templates\/components\/ui\/hover-card",
        "content": "<div {{ stimulus_target('ui--hover-card', 'wrapper') }} class=\"hidden z-50\">\r\n    <div {{ attributes.add(stimulus_target('ui--hover-card', 'content')).without('class') }}\r\n            data-side=\"{{ outerScope.placement }}\"\r\n            data-state=\"open\"\r\n            class=\"{{ ['z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2', attributes.render('class')] |tailwind_merge }}\">\r\n        {% block content %}{% endblock %}\r\n    <\/div>\r\n<\/div>"
      },
      {
        "name": "root.html.twig",
        "dir": "templates\/components\/ui\/hover-card",
        "content": "{% props placement = 'bottom' %}\r\n\r\n<div {{ attributes.add(stimulus_controller('ui--hover-card', {placement})).without('class') }}\r\n        class=\"{{ ['', attributes.render('class')] |tailwind_merge }}\" data-state=\"closed\" data-side=\"{{ placement }}\">\r\n    {% block content %}{% endblock %}\r\n<\/div>"
      },
      {
        "name": "trigger.html.twig",
        "dir": "templates\/components\/ui\/hover-card",
        "content": "<div {{ attributes.add(stimulus_target('ui--hover-card', 'trigger')).without('class') }}\r\n        class=\"{{ ['', attributes.render('class')] |tailwind_merge }}\">\r\n    {% block content %}{% endblock %}\r\n<\/div>"
      },
      {
        "name": "hover-card_controller.js",
        "dir": "assets\/js\/components\/ui",
        "content": "import {Controller} from \"@hotwired\/stimulus\";\r\nimport {createPopper} from \"@popperjs\/core\";\r\nimport {useClickOutside} from \"stimulus-use\";\r\nimport \"@kanety\/stimulus-static-actions\"\r\n\r\nexport default class UIHoverCard extends Controller {\r\n    static targets = [\"content\", \"wrapper\", \"trigger\"];\r\n    static values = {\r\n        placement: String\r\n    }\r\n    static actions = [\r\n        ['trigger', 'mouseenter->show'],\r\n        ['trigger', 'pointerleave->initiateHide'],\r\n        ['wrapper', 'mouseover->cancelHide'],\r\n        ['wrapper', 'pointerleave->hide'],\r\n    ]\r\n\r\n    initialize() {\r\n        if (!['top', 'bottom', 'right', 'left'].includes(this.placementValue)) {\r\n            throw new Error('Invalid placement value');\r\n        }\r\n    }\r\n\r\n    connect() {\r\n        useClickOutside(this);\r\n\r\n        this.popperInstance = createPopper(this.triggerTarget, this.wrapperTarget, {\r\n            placement: this.placementValue || \"bottom\",\r\n            modifiers: [\r\n                {\r\n                    name: \"offset\",\r\n                    options: {\r\n                        offset: [0, 4],\r\n                    },\r\n                },\r\n            ],\r\n        });\r\n    }\r\n\r\n    clickOutside(event) {\r\n        this.hide();\r\n    }\r\n\r\n    toggleState(stateClass, visibility, state) {\r\n        this.wrapperTarget.classList.toggle(stateClass, visibility);\r\n        this.contentTarget.classList.toggle(stateClass, visibility);\r\n        this.contentTarget.dataset.state = state;\r\n        this.triggerTarget.dataset.state = state;\r\n    }\r\n\r\n    updateAndToggle(stateClass, visibility, state) {\r\n        this.popperInstance.update();\r\n        this.toggleState(stateClass, visibility, state);\r\n    }\r\n\r\n    show() {\r\n        this.updateAndToggle(\"hidden\", false, \"open\");\r\n    }\r\n\r\n    hide() {\r\n        this.updateAndToggle(\"hidden\", true, \"closed\");\r\n    }\r\n\r\n\r\n    \/\/ get set to store timeouts\r\n    get hideTimeouts() {\r\n        return this.hideTimeoutsStore || (this.hideTimeoutsStore = new Set())\r\n    }\r\n\r\n    \/\/ store initiated hide action\r\n    initiateHide() {\r\n        let timeoutId = setTimeout(() => this.hide(), 200); \/\/ initiate hiding after 200ms\r\n        this.hideTimeouts.add(timeoutId);\r\n    }\r\n\r\n    \/\/ cancel hiding if cursor moved to wrapper\r\n    cancelHide() {\r\n        this.hideTimeouts.forEach(timeoutId => clearTimeout(timeoutId)); \/\/ clear all timeouts\r\n        this.hideTimeouts.clear();\r\n    }\r\n}"
      }
    ],
    "iconDependencies": [],
    "registryDependencies": [],
    "dependencies": [
      "@popperjs\/core",
      "stimulus-use",
      "@kanety\/stimulus-static-actions"
    ]
  },
  {
    "name": "input",
    "files": [
      {
        "name": "default.html.twig",
        "dir": "templates\/components\/ui\/input",
        "content": "<input{{ attributes.add(stimulus_controller('ui--input')).without('class') }}\r\n        class=\"{{ ['flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-sm shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 file:pt-[3px]', attributes.render('class') ?? ''] | tailwind_merge }}\">"
      },
      {
        "name": "textarea.html.twig",
        "dir": "templates\/components\/ui\/input",
        "content": "<textarea{{ attributes.add(stimulus_controller('ui--input')).without('class') }} class=\"{{ ['flex min-h-[60px] w-full rounded-md border border-input bg-transparent px-3 py-2 text-sm shadow-sm placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50', attributes.render('class')] |tailwind_merge }}\">{% block content %}{% endblock %}<\/textarea>"
      },
      {
        "name": "input_controller.js",
        "dir": "assets\/js\/components\/ui",
        "content": "import {Controller} from \"@hotwired\/stimulus\";\r\n\r\nexport default class UIInput extends Controller {\r\n    setValue(newValue) {\r\n        this.element.value = newValue;\r\n        this.element.dispatchEvent(new Event('change', {bubbles: true}));\r\n    }\r\n}"
      }
    ],
    "iconDependencies": [],
    "registryDependencies": [
      "extra"
    ],
    "dependencies": []
  },
  {
    "name": "label",
    "files": [
      {
        "name": "root.html.twig",
        "dir": "templates\/components\/ui\/label",
        "content": "{% set labelVariants = cva({\r\n    base: 'text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70',\r\n}) %}\r\n\r\n<label {{ attributes.without('class') }} class=\"{{ labelVariants.apply({}, attributes.render('class') ?? '') | tailwind_merge }}\">\r\n    {% block content %}{% endblock %}\r\n<\/label>"
      }
    ],
    "iconDependencies": [],
    "registryDependencies": [],
    "dependencies": []
  },
  {
    "name": "pagination",
    "files": [
      {
        "name": "content.html.twig",
        "dir": "templates\/components\/ui\/pagination",
        "content": "<ul {{ attributes.without('class') }} class=\"{{ ['flex flex-row items-center gap-1', attributes.render('class')] | tailwind_merge }}\">\r\n    {% block content %}{% endblock %}\r\n<\/ul>"
      },
      {
        "name": "ellipsis.html.twig",
        "dir": "templates\/components\/ui\/pagination",
        "content": "<span {{ attributes.without('class') }} class=\"{{ ['flex h-9 w-9 items-center justify-center', attributes.render('class')] |tailwind_merge }}\">\r\n    <twig:ux:icon name=\"radix-icons:dots-horizontal\" class=\"h-4 w-4\" \/>\r\n    <span class=\"sr-only\">More pages<\/span>\r\n<\/span>"
      },
      {
        "name": "item.html.twig",
        "dir": "templates\/components\/ui\/pagination",
        "content": "<li {{ attributes.without('class') }} class=\"{{ ['', attributes.render('class')] | tailwind_merge }}\">\r\n    {% block content %}{% endblock %}\r\n<\/li>"
      },
      {
        "name": "link.html.twig",
        "dir": "templates\/components\/ui\/pagination",
        "content": "{% props isActive = false %}\r\n\r\n{% set attrs = attributes.defaults({\r\n    variant: isActive ? \"outline\" : \"ghost\",\r\n    size: \"icon\",\r\n    'aria-current': isActive ? 'page' : 'false',\r\n}) %}\r\n\r\n{% component 'ui:button:root' with {...attrs} %}\r\n    {% block content %}{{ block(outerBlocks.content) }}{% endblock %}\r\n{% endcomponent %}"
      },
      {
        "name": "next.html.twig",
        "dir": "templates\/components\/ui\/pagination",
        "content": "{% set attrs = attributes.defaults({\r\n    'aria-label': 'Go to next page',\r\n    size: 'default',\r\n    class: 'gap-1 pl-2.5'\r\n}) %}\r\n\r\n{% component 'ui:pagination:link' with {...attrs} %}\r\n    {% block content %}\r\n        <span>Next<\/span>\r\n        <twig:ux:icon name=\"radix-icons:chevron-right\" class=\"h-4 w-4\" \/>\r\n    {% endblock %}\r\n{% endcomponent %}"
      },
      {
        "name": "previous.html.twig",
        "dir": "templates\/components\/ui\/pagination",
        "content": "{% set attrs = attributes.defaults({\r\n    'aria-label': 'Go to previous page',\r\n    size: 'default',\r\n    class: 'gap-1 pl-2.5'\r\n}) %}\r\n\r\n{% component 'ui:pagination:link' with {...attrs} %}\r\n    {% block content %}\r\n        <twig:ux:icon name=\"radix-icons:chevron-left\" class=\"h-4 w-4\" \/>\r\n        <span>Previous<\/span>\r\n    {% endblock %}\r\n{% endcomponent %}"
      },
      {
        "name": "root.html.twig",
        "dir": "templates\/components\/ui\/pagination",
        "content": "<nav {{ attributes.without('class') }}\r\n    class=\"{{ ['mx-auto flex w-full justify-center', attributes.render('class')] | tailwind_merge }}\"\r\n    role=\"navigation\"\r\n    aria-label=\"pagination\"\r\n>\r\n    {% block content %}{% endblock %}\r\n<\/nav>"
      }
    ],
    "iconDependencies": [
      "radix-icons:dots-horizontal",
      "radix-icons:chevron-right",
      "radix-icons:chevron-left"
    ],
    "registryDependencies": [],
    "dependencies": []
  },
  {
    "name": "popover",
    "files": [
      {
        "name": "content.html.twig",
        "dir": "templates\/components\/ui\/popover",
        "content": "<div {{ stimulus_target('ui--popover', 'wrapper') }} class=\"hidden z-50\">\r\n    <div {{ attributes.add(stimulus_target('ui--popover', 'content')).without('class') }}\r\n            data-state=\"open\"\r\n            role=\"dialog\"\r\n            data-side=\"{{ outerScope.placement }}\"\r\n            tabindex=\"-1\"\r\n            class=\"{{ ['z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2', attributes.render('class')] | tailwind_merge }}\">\r\n        {% block content %}{% endblock %}\r\n    <\/div>\r\n<\/div>"
      },
      {
        "name": "root.html.twig",
        "dir": "templates\/components\/ui\/popover",
        "content": "{% props placement = 'bottom', trigger = 'click', dismissAfter = null, matchWidth = false %}\r\n\r\n<div {{ attributes.add(stimulus_controller('ui--popover', { placement, trigger, dismissAfter, matchWidth })) }} data-state=\"closed\">\r\n    {% block content %}{% endblock %}\r\n<\/div>"
      },
      {
        "name": "trigger.html.twig",
        "dir": "templates\/components\/ui\/popover",
        "content": "{% if outerScope.trigger == 'hover' %}\r\n    {% set action = stimulus_action('ui--popover', 'toggle', 'mouseenter') %}\r\n{% elseif outerScope.trigger == 'focus' %}\r\n    {% set action = stimulus_action('ui--popover', 'toggle', 'focusin') %}\r\n{% else %}\r\n    {% set action = stimulus_action('ui--popover', 'toggle', outerScope.trigger) %}\r\n{% endif %}\r\n\r\n<div{{ attributes.add(stimulus_target('ui--popover', 'trigger')).add(action) }}>\r\n    {% block content %}{% endblock %}\r\n<\/div>"
      },
      {
        "name": "popover_controller.js",
        "dir": "assets\/js\/components\/ui",
        "content": "import {Controller} from \"@hotwired\/stimulus\";\r\nimport {createPopper} from \"@popperjs\/core\";\r\nimport {useClickOutside} from \"stimulus-use\";\r\n\r\nexport default class UIPopover extends Controller {\r\n    static targets = ['trigger', 'content', 'wrapper'];\r\n\r\n    static values = {\r\n        placement: String,\r\n        trigger: String,\r\n        dismissAfter: Number,\r\n        matchWidth: Boolean,\r\n        offset: Array,\r\n    }\r\n\r\n    initialize() {\r\n        if (!['click', 'hover', 'focus'].includes(this.triggerValue)) {\r\n            throw new Error('Invalid trigger value');\r\n        }\r\n\r\n        if (!['auto', 'auto-start', 'auto-end', 'top', 'top-start', 'top-end', 'bottom', 'bottom-start', 'bottom-end', 'right', 'right-start', 'right-end', 'left', 'left-start', 'left-end'].includes(this.placementValue)) {\r\n            throw new Error('Invalid placement value');\r\n        }\r\n    }\r\n\r\n    connect() {\r\n        useClickOutside(this);\r\n\r\n        if (this.matchWidthValue) {\r\n            this.contentTarget.style.width = this.triggerTarget.offsetWidth + \"px\";\r\n        }\r\n\r\n        this.popperInstance = createPopper(this.triggerTarget, this.wrapperTarget, {\r\n            placement: this.contentTarget.dataset.side || \"bottom\",\r\n            modifiers: [\r\n                {\r\n                    name: \"offset\",\r\n                    options: {\r\n                        offset: this.offsetValue.length ? this.offsetValue : [0, 4],\r\n                    },\r\n                }\r\n            ],\r\n        });\r\n    }\r\n\r\n    \/\/ Show the popover\r\n    show() {\r\n        this.wrapperTarget.classList.remove(\"hidden\");\r\n        this.contentTarget.classList.remove(\"hidden\");\r\n        this.contentTarget.dataset.state = \"open\";\r\n        this.triggerTarget.dataset.state = \"open\";\r\n    }\r\n\r\n    \/\/ Hide the popover\r\n    hide() {\r\n        this.wrapperTarget.classList.add(\"hidden\");\r\n        this.contentTarget.classList.add(\"hidden\");\r\n        this.contentTarget.dataset.state = \"closed\";\r\n        this.triggerTarget.dataset.state = \"closed\";\r\n    }\r\n\r\n    clickOutside(event) {\r\n        this.hide();\r\n    }\r\n\r\n    \/\/ Toggle the popover on demand\r\n    toggle(event) {\r\n        this.popperInstance.update();\r\n        if (this.wrapperTarget.classList.contains(\"hidden\")) {\r\n            this.show();\r\n\r\n            if (this.hasDismissAfterValue) {\r\n                setTimeout(() => {\r\n                    this.hide();\r\n                }, this.dismissAfterValue);\r\n            }\r\n        } else {\r\n            this.hide();\r\n        }\r\n    }\r\n}"
      }
    ],
    "iconDependencies": [],
    "registryDependencies": [],
    "dependencies": [
      "@popperjs\/core",
      "stimulus-use"
    ]
  },
  {
    "name": "select",
    "files": [
      {
        "name": "content.html.twig",
        "dir": "templates\/components\/ui\/select",
        "content": "{% props id = null %}\r\n\r\n<div {{ stimulus_target('ui--popover', 'wrapper') }} class=\"hidden\">\r\n    <div {{ attributes.add(stimulus_target('ui--popover', 'content')).add(stimulus_controller(controllerName='ui--select', controllerOutlets={\r\n        'ui--input': '#' ~ id,\r\n        'ui--text': '#' ~ id,\r\n    })).without('class') }}\r\n            data-state=\"open\"\r\n            role=\"dialog\"\r\n            data-side=\"{{ outerScope.placement }}\"\r\n            tabindex=\"-1\"\r\n            class=\"{{ ['relative z-50 p-1 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2', attributes.render('class')] | tailwind_merge }}\"\r\n    >\r\n        {% block content %}{% endblock %}\r\n    <\/div>\r\n<\/div>"
      },
      {
        "name": "group.html.twig",
        "dir": "templates\/components\/ui\/select",
        "content": "<div {{ attributes }}>\r\n    {% block content %}{% endblock %}\r\n<\/div>"
      },
      {
        "name": "input.html.twig",
        "dir": "templates\/components\/ui\/select",
        "content": "<input {{ attributes.add(stimulus_controller('ui--input')) }} type=\"hidden\" class=\"hidden\">"
      },
      {
        "name": "item.html.twig",
        "dir": "templates\/components\/ui\/select",
        "content": "{% props value = null %}\r\n\r\n<div {{ attributes.add(stimulus_target('ui--select', 'item')).add(stimulus_action('ui--popover', 'hide', 'click')).add(stimulus_action('ui--select', 'selectItem', 'click')).without('class') }}\r\n        role=\"menuitem\"\r\n        data-value=\"{{ value }}\"\r\n        class=\"{{ ['group\/selectitem text-foreground relative flex cursor-pointer select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground aria-selected:bg-accent aria-selected:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50', attributes.render('class')] |tailwind_merge }}\"\r\n>\r\n    <span class=\"absolute right-2 flex h-3.5 w-3.5 items-center justify-center hidden group-data-[selected=true]\/selectitem:block\">\r\n        <twig:ux:icon name=\"radix-icons:check\" class=\"w-4 h-4\"\/>\r\n    <\/span>\r\n    {% block content %}{% endblock %}\r\n<\/div>"
      },
      {
        "name": "label.html.twig",
        "dir": "templates\/components\/ui\/select",
        "content": "<h3 {{ attributes.without('class') }} class=\"{{ [' text-foreground px-2 py-1.5 text-sm font-semibold', attributes.render('class')] | tailwind_merge }}\">\r\n    {% block content %}{% endblock %}\r\n<\/h3>"
      },
      {
        "name": "root.html.twig",
        "dir": "templates\/components\/ui\/select",
        "content": "{% props placement = 'bottom-start', trigger = 'click', dismissAfter = null, matchWidth = true %}\r\n\r\n<div {{ attributes.add(stimulus_controller('ui--popover', {placement, trigger, dismissAfter, matchWidth})).without('class') }} class=\"{{ attributes.render('class') }}\">\r\n    {% block content %}{% endblock %}\r\n<\/div>"
      },
      {
        "name": "separator.html.twig",
        "dir": "templates\/components\/ui\/select",
        "content": "<div {{ attributes.without('class') }}\r\n        class=\"{{ ['-mx-1 my-1 h-px bg-muted', attributes.render('class')] |tailwind_merge }}\"><\/div>"
      },
      {
        "name": "trigger.html.twig",
        "dir": "templates\/components\/ui\/select",
        "content": "{% if outerScope.trigger == 'hover' %}\r\n    {% set action = stimulus_action('ui--popover', 'toggle', 'mouseenter') %}\r\n{% elseif outerScope.trigger == 'focus' %}\r\n    {% set action = stimulus_action('ui--popover', 'toggle', 'focusin') %}\r\n{% else %}\r\n    {% set action = stimulus_action('ui--popover', 'toggle', outerScope.trigger) %}\r\n{% endif %}\r\n\r\n<button {{ attributes.add(stimulus_target('ui--popover', 'trigger')).add(action).without('class') }} type=\"button\" class=\"{{ ['flex h-9 w-full items-center justify-between whitespace-nowrap rounded-md border border-input bg-transparent px-3 py-2 text-sm shadow-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-1 focus:ring-ring disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1', attributes.render('class')] | tailwind_merge }}\">\r\n    {% block content %}{% endblock %}\r\n    <twig:ux:icon name=\"radix-icons:caret-sort\" class=\"h-4 w-4 opacity-50\" \/>\r\n<\/button>"
      },
      {
        "name": "value.html.twig",
        "dir": "templates\/components\/ui\/select",
        "content": "{% props placeholder = '' %}\r\n\r\n<span {{ attributes.add(stimulus_controller('ui--text')).without('class') }} class=\"pointer-events-none\">\r\n    {% block content %}{{ placeholder }}{% endblock %}\r\n<\/span>"
      },
      {
        "name": "select_controller.js",
        "dir": "assets\/js\/components\/ui",
        "content": "import {Controller} from \"@hotwired\/stimulus\";\r\n\r\nexport default class UISelect extends Controller {\r\n    static targets = [\"item\"];\r\n    static outlets = [\"ui--input\", \"ui--text\"];\r\n\r\n    connect() {\r\n        this.setSelectedItem();\r\n    }\r\n\r\n    setSelectedItem() {\r\n        const selectedItem = this.selectedItem();\r\n\r\n        this.itemTargets.forEach((item) => {\r\n            item.removeAttribute(\"data-selected\");\r\n            item.removeAttribute(\"aria-selected\");\r\n        });\r\n\r\n        if (selectedItem) {\r\n            selectedItem.setAttribute(\"data-selected\", \"true\");\r\n            selectedItem.setAttribute(\"aria-selected\", \"true\");\r\n        }\r\n    }\r\n\r\n    selectedItem() {\r\n        return this.itemTargets.find((item) => {\r\n            return item.dataset.value === this.uiInputOutlet.element.value;\r\n        });\r\n    }\r\n\r\n    selectItem(event) {\r\n        event.preventDefault();\r\n        const selectedValue = event.currentTarget.dataset.value;\r\n        const selectedText = event.currentTarget.innerText;\r\n\r\n        this.setValue(selectedValue);\r\n        this.setInnerText(selectedText);\r\n\r\n        this.setSelectedItem()\r\n    }\r\n\r\n    setValue(selectedValue) {\r\n        this.uiInputOutlet.setValue(selectedValue);\r\n    }\r\n\r\n    setInnerText(selectedOption) {\r\n        this.uiTextOutlet.setText(selectedOption);\r\n    }\r\n}"
      }
    ],
    "iconDependencies": [
      "radix-icons:check",
      "radix-icons:caret-sort"
    ],
    "registryDependencies": [
      "extra"
    ],
    "dependencies": []
  },
  {
    "name": "separator",
    "files": [
      {
        "name": "root.html.twig",
        "dir": "templates\/components\/ui\/separator",
        "content": "{% props orientation = 'horizontal' %}\r\n\r\n<div {{ attributes.without('class') }} class=\"{{ [\r\n    'shrink-0 bg-border',\r\n    orientation == 'horizontal' ? 'h-[1px] w-full': 'h-full w-[1px]',\r\n    attributes.render('class')\r\n] |tailwind_merge }}\" data-orientation=\"{{ orientation }}\"><\/div>"
      }
    ],
    "iconDependencies": [],
    "registryDependencies": [],
    "dependencies": []
  },
  {
    "name": "sheet",
    "files": [
      {
        "name": "close.html.twig",
        "dir": "templates\/components\/ui\/sheet",
        "content": "<div {{ attributes.add(stimulus_target('ui--sheet', 'close')).without('class') }} data-state=\"closed\" class=\"{{ ['', attributes.render('class')] | tailwind_merge }}\">\r\n    {% block content %}{% endblock %}\r\n<\/div>"
      },
      {
        "name": "content.html.twig",
        "dir": "templates\/components\/ui\/sheet",
        "content": "{% set sheetVariants = cva({\r\n    base: 'fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500',\r\n    variants: {\r\n        side: {\r\n            top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\r\n            bottom:\r\n            \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\r\n            left: \"inset-y-0 left-0 h-full w-3\/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\r\n            right:\r\n            \"inset-y-0 right-0 h-full w-3\/4 border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\r\n        },\r\n    },\r\n    defaultVariants: {\r\n        side: \"right\",\r\n    }\r\n}) %}\r\n\r\n<div {{ stimulus_target('ui--sheet', 'wrapper') }} data-state=\"closed\" class=\"hidden\">\r\n    <twig:ui:sheet:overlay\/>\r\n    <div {{ attributes.add(stimulus_target('ui--sheet', 'content')).without('class') }} data-state=\"closed\" class=\"{{ sheetVariants.apply({ side: outerScope.side }, attributes.render('class') ?? '') | tailwind_merge }}\">\r\n        {% block content %}{% endblock %}\r\n        <twig:ui:sheet:close class=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\r\n            <twig:ux:icon name=\"radix-icons:cross-2\" class=\"h-4 w-4\"\/>\r\n            <span class=\"sr-only\">Close<\/span>\r\n        <\/twig:ui:sheet:close>\r\n    <\/div>\r\n<\/div>"
      },
      {
        "name": "description.html.twig",
        "dir": "templates\/components\/ui\/sheet",
        "content": "<div {{ attributes.add(stimulus_target('ui--sheet', 'description')).without('class') }} class=\"{{ ['text-sm text-muted-foreground', attributes.render('class')] | tailwind_merge }}\">\r\n    {% block content %}{% endblock %}\r\n<\/div>"
      },
      {
        "name": "footer.html.twig",
        "dir": "templates\/components\/ui\/sheet",
        "content": "<div {{ attributes.add(stimulus_target('ui--sheet', 'footer')).without('class') }} class=\"{{ ['flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2', attributes.render('class')] | tailwind_merge }}\">\r\n    {% block content %}{% endblock %}\r\n<\/div>"
      },
      {
        "name": "header.html.twig",
        "dir": "templates\/components\/ui\/sheet",
        "content": "<div {{ attributes.add(stimulus_target('ui--sheet', 'header')).without('class') }} class=\"{{ ['flex flex-col space-y-2 text-center sm:text-left', attributes.render('class')] | tailwind_merge }}\">\r\n    {% block content %}{% endblock %}\r\n<\/div>"
      },
      {
        "name": "overlay.html.twig",
        "dir": "templates\/components\/ui\/sheet",
        "content": "<div {{ attributes.add(stimulus_target('ui--sheet', 'overlay')).without('class') }}\r\n        class=\"{{ ['fixed inset-0 z-50 bg-black\/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0', attributes.render('class')] | tailwind_merge }}\">\r\n<\/div>"
      },
      {
        "name": "root.html.twig",
        "dir": "templates\/components\/ui\/sheet",
        "content": "{% props side = 'right' %}\r\n\r\n<div {{ attributes.add(stimulus_controller('ui--sheet', {side})).without('class') }}\r\n        class=\"{{ ['', attributes.render('class')] | tailwind_merge }}\" data-state=\"closed\">\r\n    {% block content %}{% endblock %}\r\n<\/div>"
      },
      {
        "name": "title.html.twig",
        "dir": "templates\/components\/ui\/sheet",
        "content": "<div {{ attributes.add(stimulus_target('ui--sheet', 'title')).without('class') }} class=\"{{ ['text-lg font-semibold text-foreground', attributes.render('class')] | tailwind_merge }}\">\r\n    {% block content %}{% endblock %}\r\n<\/div>"
      },
      {
        "name": "trigger.html.twig",
        "dir": "templates\/components\/ui\/sheet",
        "content": "<div {{ attributes.add(stimulus_target('ui--sheet', 'trigger')).without('class') }}\r\n        data-state=\"closed\"\r\n        aria-haspopup=\"dialog\"\r\n        aria-expanded=\"false\"\r\n        class=\"{{ ['', attributes.render('class')] | tailwind_merge }}\">\r\n    {% block content %}{% endblock %}\r\n<\/div>"
      },
      {
        "name": "sheet_controller.js",
        "dir": "assets\/js\/components\/ui",
        "content": "import '@kanety\/stimulus-static-actions'\r\nimport UIDialog from \".\/dialog_controller.js\";\r\n\r\nexport default class UISheet extends UIDialog {\r\n    static values = {\r\n        side: String\r\n    }\r\n\r\n    initialize() {\r\n        if (!['left', 'right', 'top', 'bottom'].includes(this.sideValue)) {\r\n            throw new Error('Invalid side value')\r\n        }\r\n    }\r\n}"
      }
    ],
    "iconDependencies": [
      "radix-icons:cross-2"
    ],
    "registryDependencies": [
      "dialog"
    ],
    "dependencies": []
  },
  {
    "name": "table",
    "files": [
      {
        "name": "body.html.twig",
        "dir": "templates\/components\/ui\/table",
        "content": "<tbody {{ attributes.without('class') }} class=\"{{ ['[&_tr:last-child]:border-0', attributes.render('class')] | tailwind_merge }}\">\r\n    {% block content %}{% endblock %}\r\n<\/tbody>"
      },
      {
        "name": "caption.html.twig",
        "dir": "templates\/components\/ui\/table",
        "content": "<caption {{ attributes.without('class') }}\r\n        class=\"{{ ['mt-4 text-sm text-muted-foreground', attributes.render('class')] | tailwind_merge }}\">\r\n    {% block content %}{% endblock %}\r\n<\/caption>"
      },
      {
        "name": "cell.html.twig",
        "dir": "templates\/components\/ui\/table",
        "content": "<td {{ attributes.without('class') }}\r\n        class=\"{{ ['p-2 align-middle [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]', attributes.render('class')] | tailwind_merge }}\">\r\n    {% block content %}{% endblock %}\r\n<\/td>"
      },
      {
        "name": "footer.html.twig",
        "dir": "templates\/components\/ui\/table",
        "content": "<tfoot {{ attributes.without('class') }}\r\n        class=\"{{ ['border-t bg-muted\/50 font-medium [&>tr]:last:border-b-0', attributes.render('class')] | tailwind_merge }}\">\r\n    {% block content %}{% endblock %}\r\n<\/tfoot>"
      },
      {
        "name": "head.html.twig",
        "dir": "templates\/components\/ui\/table",
        "content": "<th {{ attributes.without('class') }}\r\n        class=\"{{ ['h-10 px-2 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]', attributes.render('class')] | tailwind_merge }}\">\r\n    {% block content %}{% endblock %}\r\n<\/th>"
      },
      {
        "name": "header.html.twig",
        "dir": "templates\/components\/ui\/table",
        "content": "<thead {{ attributes.without('class') }} class=\"{{ ['[&_tr]:border-b', attributes.render('class')] | tailwind_merge }}\">\r\n    {% block content %}{% endblock %}\r\n<\/thead>"
      },
      {
        "name": "root.html.twig",
        "dir": "templates\/components\/ui\/table",
        "content": "<div class=\"relative w-full overflow-auto\">\r\n    <table {{ attributes.without('class') }}\r\n            class=\"{{ ['w-full caption-bottom text-sm', attributes.render('class')] | tailwind_merge }}\">\r\n        {% block content %}{% endblock %}\r\n    <\/table>\r\n<\/div>"
      },
      {
        "name": "row.html.twig",
        "dir": "templates\/components\/ui\/table",
        "content": "<tr {{ attributes.without('class') }}\r\n        class=\"{{ ['border-b transition-colors hover:bg-muted\/50 data-[state=selected]:bg-muted', attributes.render('class')] | tailwind_merge }}\">\r\n    {% block content %}{% endblock %}\r\n<\/tr>"
      }
    ],
    "iconDependencies": [],
    "registryDependencies": [],
    "dependencies": []
  },
  {
    "name": "tabs",
    "files": [
      {
        "name": "content.html.twig",
        "dir": "templates\/components\/ui\/tabs",
        "content": "{% props value = null %}\r\n\r\n<div {{ attributes.add(stimulus_target('ui--tabs', 'content')).without('class') }}\r\n        data-value=\"{{ value }}\"\r\n        class=\"{{ [\r\n            'mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2',\r\n            outerScope.defaultValue != value ? 'hidden' : '',\r\n            attributes.render('class')] |tailwind_merge }}\">\r\n    {% block content %}{% endblock %}\r\n<\/div>"
      },
      {
        "name": "list.html.twig",
        "dir": "templates\/components\/ui\/tabs",
        "content": "<div {{ attributes.add(stimulus_target('ui--tabs', 'list')).without('class') }} class=\"{{ ['inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground', attributes.render('class')] |tailwind_merge }}\">\r\n    {% block content %}{% endblock %}\r\n<\/div>"
      },
      {
        "name": "root.html.twig",
        "dir": "templates\/components\/ui\/tabs",
        "content": "{% props defaultValue = 'default' %}\r\n\r\n<div {{ attributes.add(stimulus_controller('ui--tabs', {active: defaultValue})).without('class') }}\r\n        class=\"{{ ['', attributes.render('class')] |tailwind_merge }}\">\r\n    {% block content %}{% endblock %}\r\n<\/div>"
      },
      {
        "name": "trigger.html.twig",
        "dir": "templates\/components\/ui\/tabs",
        "content": "{% props value = null %}\r\n\r\n<div {{ attributes.add(stimulus_target('ui--tabs', 'trigger')).without('class') }}\r\n        type=\"button\"\r\n        data-value=\"{{ value }}\"\r\n        class=\"{{ ['inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm', attributes.render('class')] |tailwind_merge }}\">\r\n    {% block content %}{% endblock %}\r\n<\/div>"
      },
      {
        "name": "tabs_controller.js",
        "dir": "assets\/js\/components\/ui",
        "content": "import {Controller} from \"@hotwired\/stimulus\"\r\nimport \"@kanety\/stimulus-static-actions\"\r\n\r\nexport default class UITabs extends Controller {\r\n    static targets = [\"trigger\", \"content\"]\r\n    static values = {active: String}\r\n    static actions = [\r\n        [\"trigger\", \"click->show\"],\r\n    ]\r\n\r\n    connect() {\r\n        if (!(this.hasActiveValue || this.triggerTargets.length === 0)) {\r\n            this.activeValue = this.triggerTargets[0].dataset.value\r\n        }\r\n    }\r\n\r\n    show(e) {\r\n        this.activeValue = e.currentTarget.dataset.value\r\n    }\r\n\r\n    activeValueChanged(currentValue, previousValue) {\r\n        if (currentValue === '' || currentValue === previousValue) return\r\n        this.resetTargets()\r\n        if (this.activeContentTarget()) {\r\n            this.activeContentTarget().classList.remove(\"hidden\")\r\n            this.activeTriggerTarget().dataset.state = \"active\"\r\n        }\r\n    }\r\n\r\n    resetTargets() {\r\n        this.contentTargets.forEach((el) => {\r\n            el.classList.add(\"hidden\")\r\n        })\r\n        this.triggerTargets.forEach((el) => {\r\n            el.dataset.state = \"inactive\"\r\n        })\r\n    }\r\n\r\n    activeTriggerTarget() {\r\n        return this.triggerTargets.find((el) => el.dataset.value === this.activeValue)\r\n    }\r\n\r\n    activeContentTarget() {\r\n        return this.contentTargets.find((el) => el.dataset.value === this.activeValue)\r\n    }\r\n}"
      }
    ],
    "iconDependencies": [],
    "registryDependencies": [],
    "dependencies": [
      "@kanety\/stimulus-static-actions"
    ]
  },
  {
    "name": "tooltip",
    "files": [
      {
        "name": "content.html.twig",
        "dir": "templates\/components\/ui\/tooltip",
        "content": "<div {{ stimulus_target('ui--tooltip', 'wrapper') }} class=\"hidden z-50\">\r\n    <div {{ attributes.add(stimulus_target('ui--tooltip', 'content')).without('class') }}\r\n            data-side=\"{{ outerScope.placement }}\"\r\n            data-state=\"open\"\r\n            class=\"{{ ['z-50 overflow-hidden rounded-md bg-primary px-3 py-1.5 text-xs text-primary-foreground animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2', attributes.render('class')] |tailwind_merge }}\">\r\n        {% block content %}{% endblock %}\r\n    <\/div>\r\n<\/div>"
      },
      {
        "name": "root.html.twig",
        "dir": "templates\/components\/ui\/tooltip",
        "content": "{% props placement = 'top' %}\r\n\r\n<div {{ attributes.add(stimulus_controller('ui--tooltip', {placement})).without('class') }}\r\n        class=\"{{ ['', attributes.render('class')] |tailwind_merge }}\" data-state=\"closed\" data-side=\"{{ placement }}\">\r\n    {% block content %}{% endblock %}\r\n<\/div>"
      },
      {
        "name": "trigger.html.twig",
        "dir": "templates\/components\/ui\/tooltip",
        "content": "<div {{ attributes.add(stimulus_target('ui--tooltip', 'trigger')).without('class') }}\r\n        class=\"{{ ['', attributes.render('class')] |tailwind_merge }}\">\r\n    {% block content %}{% endblock %}\r\n<\/div>"
      },
      {
        "name": "tooltip_controller.js",
        "dir": "assets\/js\/components\/ui",
        "content": "import { Controller } from \"@hotwired\/stimulus\";\r\nimport { createPopper } from \"@popperjs\/core\";\r\nimport { useDebounce, useHover } from \"stimulus-use\";\r\n\r\nexport default  class UITooltip extends Controller {\r\n    static debounces = [\"mouseEnter\", \"mouseLeave\"];\r\n    static values = {\r\n        placement: String\r\n    }\r\n    static targets = [\"content\", \"wrapper\", \"trigger\"];\r\n\r\n    initialize() {\r\n        if (!['top','bottom','right','left'].includes(this.placementValue)) {\r\n            throw new Error('Invalid placement value');\r\n        }\r\n    }\r\n\r\n    connect() {\r\n        useDebounce(this);\r\n        useHover(this, { element: this.triggerTarget });\r\n        this.popperInstance = createPopper(this.triggerTarget, this.wrapperTarget, {\r\n            placement: this.placementValue || \"top\",\r\n            modifiers: [\r\n                {\r\n                    name: \"offset\",\r\n                    options: {\r\n                        offset: [0, 4],\r\n                    },\r\n                },\r\n            ],\r\n        });\r\n    }\r\n\r\n    mouseEnter() {\r\n        this.updateTooltip();\r\n        this.showTooltip();\r\n    }\r\n\r\n    mouseLeave() {\r\n        this.updateTooltip();\r\n        this.hideTooltip();\r\n    }\r\n\r\n    updateTooltip() {\r\n        this.popperInstance.update();\r\n    }\r\n\r\n    showTooltip() {\r\n        this.wrapperTarget.classList.remove(\"hidden\");\r\n        this.contentTarget.classList.remove(\"hidden\");\r\n        this.contentTarget.dataset.state = \"open\";\r\n        this.triggerTarget.dataset.state = \"open\";\r\n    }\r\n\r\n    hideTooltip() {\r\n        this.wrapperTarget.classList.add(\"hidden\");\r\n        this.contentTarget.classList.add(\"hidden\");\r\n        this.contentTarget.dataset.state = \"closed\";\r\n        this.triggerTarget.dataset.state = \"closed\";\r\n    }\r\n}"
      }
    ],
    "iconDependencies": [],
    "registryDependencies": [],
    "dependencies": [
      "@popperjs\/core",
      "stimulus-use"
    ]
  },
  {
    "name": "extra",
    "files": [
      {
        "name": "input_controller.js",
        "dir": "assets\/js\/components\/ui",
        "content": "import {Controller} from \"@hotwired\/stimulus\";\r\n\r\nexport default class UIInput extends Controller {\r\n    setValue(newValue) {\r\n        this.element.value = newValue;\r\n        this.element.dispatchEvent(new Event('change', {bubbles: true}));\r\n    }\r\n}"
      },
      {
        "name": "text_controller.js",
        "dir": "assets\/js\/components\/ui",
        "content": "import {Controller} from \"@hotwired\/stimulus\";\r\n\r\nexport default class UIText extends Controller {\r\n    setText(content) {\r\n        this.element.innerText = content;\r\n    }\r\n}"
      }
    ],
    "iconDependencies": [],
    "registryDependencies": [],
    "dependencies": []
  },
  [
    {
      "name": "datatable",
      "files": [
        {
          "name": "datatable.html.twig",
          "dir": "templates\/themes",
          "content": "{% extends '@KreyuDataTable\/themes\/base.html.twig' %}\r\n\r\n{% block kreyu_data_table %}\r\n    <turbo-frame id=\"kreyu_data_table_{{ name }}\" class=\"w-full space-y-4\"\r\n            {% if has_batch_actions %}\r\n                data-controller=\"kreyu--data-table-bundle--batch\"\r\n            {% endif %}\r\n    >\r\n        {{ block('action_bar') }}\r\n        {{ block('table') }}\r\n\r\n        {% if pagination_enabled %}\r\n            {{ data_table_pagination(pagination) }}\r\n        {% endif %}\r\n    <\/turbo-frame>\r\n{% endblock %}\r\n\r\n{% block table_body %}\r\n    <tbody class=\"[&_tr:last-child]:border-0\">{{ block('table_body_row') }}<\/tbody>\r\n{% endblock %}\r\n\r\n{% block table %}\r\n    <div class=\"rounded-md border\">\r\n        {% set attrs = table_attr|default({}) %}\r\n\r\n        {% with { head: block('table_head'), body: block('table_body') } %}\r\n            <twig:ui:table:root {{ ...attrs }}>\r\n                {{ head|raw }}\r\n                {{ body|raw }}\r\n            <\/twig:ui:table:root>\r\n        {% endwith %}\r\n    <\/div>\r\n{% endblock %}\r\n\r\n{% block table_head %}\r\n    {% with {row: block('table_head_row') } %}\r\n        <twig:ui:table:header class=\"[&_tr]:border-b\">{{ row|raw }}<\/twig:ui:table:header>\r\n    {% endwith %}\r\n{% endblock %}\r\n\r\n{% block kreyu_data_table_header_row %}\r\n    <twig:ui:table:row {{ ...row.vars.attr }}>\r\n        {% for column_header in row %}\r\n            {{- data_table_column_header(column_header) -}}\r\n        {% endfor %}\r\n    <\/twig:ui:table:row>\r\n{% endblock %}\r\n\r\n{% block column_header %}\r\n    {% set label_attr = label_attr|default({}) %}\r\n\r\n    {% if data_table.vars.sorting_enabled and sortable %}\r\n        {% set current_sort_field = sorting_field_data.name|default(null) %}\r\n        {% set current_sort_direction = sorting_field_data.direction|default(null) %}\r\n\r\n        {% set active_attr = active_attr|default({}) %}\r\n        {% set inactive_attr = inactive_attr|default({}) %}\r\n\r\n        {% set attr = attr|default({}) %}\r\n        {% set attr = attr|merge(sorted ? active_attr : inactive_attr) %}\r\n\r\n        <twig:ui:table:head {{ ...attr }}>\r\n            <div class=\"flex items-center\">\r\n                <twig:ui:dropdown-menu:root placement=\"bottom-start\">\r\n                    <twig:ui:dropdown-menu:trigger>\r\n                        <twig:ui:button:root variant=\"ghost\" size=\"sm\" class=\"h-8 data-[state=open]:bg-accent\">\r\n                            {{- block('column_header_label', theme, _context) -}}\r\n                            {% if sorted %}\r\n                                {% if sort_direction == 'asc' %}\r\n                                    {{ block('sort_arrow_asc', theme, _context) }}\r\n                                {% else %}\r\n                                    {{ block('sort_arrow_desc', theme, _context) }}\r\n                                {% endif %}\r\n                            {% else %}\r\n                                {{ block('sort_arrow_none', theme, _context) }}\r\n                            {% endif %}\r\n                        <\/twig:ui:button:root>\r\n                    <\/twig:ui:dropdown-menu:trigger>\r\n                    <twig:ui:dropdown-menu:content>\r\n                        {% set query_params = app.request.query.all %}\r\n                        {% set query_params = query_params|merge({ (sort_parameter_name): {\r\n                            (name): 'asc'\r\n                        } }) %}\r\n\r\n                        {% set query_params = app.request.attributes.get('_route_params')|merge(query_params) %}\r\n\r\n                        {% set asc_label_attr = { href: path(app.request.get('_route'), query_params) }|merge(label_attr) %}\r\n                        {% set asc_label_attr = { 'data-turbo-action': 'advance' }|merge(asc_label_attr) %}\r\n\r\n                        <twig:ui:dropdown-menu:item {{ ...asc_label_attr }}>\r\n                            <twig:ux:icon name=\"radix-icons:arrow-up\"\r\n                                          class=\"mr-2 h-3.5 w-3.5 text-muted-foreground\/70\"\/>\r\n                            Asc\r\n                        <\/twig:ui:dropdown-menu:item>\r\n\r\n                        {% set query_params = app.request.query.all %}\r\n                        {% set query_params = query_params|merge({ (sort_parameter_name): {\r\n                            (name): 'desc'\r\n                        } }) %}\r\n\r\n                        {% set query_params = app.request.attributes.get('_route_params')|merge(query_params) %}\r\n\r\n                        {% set desc_label_attr = { href: path(app.request.get('_route'), query_params) }|merge(label_attr) %}\r\n                        {% set desc_label_attr = { 'data-turbo-action': 'advance' }|merge(desc_label_attr) %}\r\n\r\n                        <twig:ui:dropdown-menu:item {{ ...desc_label_attr }}>\r\n                            <twig:ux:icon name=\"radix-icons:arrow-down\"\r\n                                          class=\"mr-2 h-3.5 w-3.5 text-muted-foreground\/70\"\/>\r\n                            Desc\r\n                        <\/twig:ui:dropdown-menu:item>\r\n                    <\/twig:ui:dropdown-menu:content>\r\n                <\/twig:ui:dropdown-menu:root>\r\n            <\/div>\r\n        <\/twig:ui:table:head>\r\n    {% else %}\r\n        <twig:ui:table:head {{ ...attr }}>\r\n            <span {% for key, value in label_attr %}{{ key }}=\"{{ value }}\"{% endfor %}>\r\n            {{- block('column_header_label', theme, _context) -}}\r\n            <\/span>\r\n        <\/twig:ui:table:head>\r\n    {% endif %}\r\n{% endblock %}\r\n\r\n{% block sort_arrow_none %}\r\n    <twig:ux:icon name=\"radix-icons:caret-sort\" class=\"ml-2 h-4 w-4\"\/>\r\n{% endblock %}\r\n\r\n{% block sort_arrow_asc %}\r\n    <twig:ux:icon name=\"radix-icons:arrow-up\" class=\"ml-2 h-4 w-4\"\/>\r\n{% endblock %}\r\n\r\n{% block sort_arrow_desc %}\r\n    <twig:ux:icon name=\"radix-icons:arrow-down\" class=\"ml-2 h-4 w-4\"\/>\r\n{% endblock %}\r\n\r\n{% block column_header_label %}\r\n    {% if translation_domain is not same as false %}\r\n        {{ label|trans(translation_parameters, translation_domain) }}\r\n    {% else %}\r\n        {{ label }}\r\n    {% endif %}\r\n{% endblock %}\r\n\r\n{% block table_body_row_results %}\r\n    {% for value_row in value_rows %}\r\n        <twig:ui:table:row {{ ...value_row.vars.attr }}>{{ data_table_value_row(value_row) }}<\/twig:ui:table:row>\r\n    {% endfor %}\r\n{% endblock %}\r\n\r\n{% block kreyu_data_table_value_row %}\r\n    {% for column_value in row %}\r\n        <twig:ui:table:cell {{ ...attr }}>\r\n            {{- data_table_column_value(column_value) -}}\r\n        <\/twig:ui:table:cell>\r\n    {% endfor %}\r\n{% endblock %}\r\n\r\n{% block column_value %}\r\n    {% if attr.class is defined %}\r\n        {% set attr = attr|merge({class: \"ml-3 block \" ~ attr.class}) %}\r\n    {% else %}\r\n        {% set attr = attr|merge({class: \"ml-3\"}) %}\r\n    {% endif %}\r\n\r\n    <span {{ block('attributes') }}>\r\n        {%- if translation_domain is not same as false -%}\r\n            {{- value|trans({}, translation_domain) -}}\r\n        {%- else -%}\r\n            {{- value -}}\r\n        {%- endif -%}\r\n    <\/span>\r\n{% endblock %}\r\n\r\n{% block pagination_widget %}\r\n    <div class=\"flex items-center justify-between px-2\">\r\n        <div class=\"flex-1 text-sm text-muted-foreground\">\r\n            {{ block('pagination_counters', theme) }}\r\n        <\/div>\r\n        <div class=\"flex items-center space-x-6 lg:space-x-8\">\r\n            <div class=\"flex w-[100px] items-center justify-center text-sm font-medium\">\r\n                {{ 'Page %current_page% of %page_count%'|trans(arguments={'%current_page%': current_page_number, '%page_count%': page_count}, domain='KreyuDataTable') }}\r\n            <\/div>\r\n            <div class=\"flex items-center space-x-2\">\r\n                {{ block('pagination_controls', theme) }}\r\n            <\/div>\r\n        <\/div>\r\n    <\/div>\r\n{% endblock %}\r\n\r\n{% block pagination_controls %}\r\n    {%- if has_previous_page -%}\r\n        {% with { path: path(app.request.get('_route'), app.request.attributes.get('_route_params')|merge(app.request.query.all)|merge({ (page_parameter_name): 1 })) } %}\r\n            {{ block('pagination_first', theme) }}\r\n        {% endwith %}\r\n\r\n        {% with { path: path(app.request.get('_route'), app.request.attributes.get('_route_params')|merge(app.request.query.all)|merge({ (page_parameter_name): current_page_number - 1 })) } %}\r\n            {{ block('pagination_previous', theme) }}\r\n        {% endwith %}\r\n    {%- else -%}\r\n        {{ block('pagination_first_disabled', theme) }}\r\n        {{ block('pagination_previous_disabled', theme) }}\r\n    {%- endif -%}\r\n\r\n    {%- if has_next_page -%}\r\n        {% with { path: path(app.request.get('_route'), app.request.attributes.get('_route_params')|merge(app.request.query.all)|merge({ (page_parameter_name): current_page_number + 1 })) } %}\r\n            {{ block('pagination_next', theme) }}\r\n        {% endwith %}\r\n\r\n        {% with { path: path(app.request.get('_route'), app.request.attributes.get('_route_params')|merge(app.request.query.all)|merge({ (page_parameter_name): page_count })) } %}\r\n            {{ block('pagination_last', theme) }}\r\n        {% endwith %}\r\n    {%- else -%}\r\n        {{ block('pagination_next_disabled', theme) }}\r\n        {{ block('pagination_last_disabled', theme) }}\r\n    {%- endif -%}\r\n{% endblock %}\r\n\r\n{% block pagination_first %}\r\n    {% set attr = attr|default({}) %}\r\n    {% set attr = attr|merge({ href: path, 'data-turbo-action': 'advance' }) %}\r\n\r\n    <twig:ui:button:root {{ ...attr }} variant=\"outline\" class=\"hidden h-8 w-8 p-0 lg:flex\">\r\n        {{ block('pagination_first_message', theme) }}\r\n    <\/twig:ui:button:root>\r\n{% endblock %}\r\n\r\n{% block pagination_first_disabled %}\r\n    {% set attr = attr|default({}) %}\r\n\r\n    <twig:ui:button:root {{ ...attr }} variant=\"outline\" class=\"hidden h-8 w-8 p-0 lg:flex\" disabled>\r\n        {{ block('pagination_first_message', theme) }}\r\n    <\/twig:ui:button:root>\r\n{% endblock %}\r\n\r\n{% block pagination_first_message %}\r\n    <span class=\"sr-only\">{{ 'Go to first page'|trans({}, 'KreyuDataTable') }}<\/span>\r\n    <twig:ux:icon name=\"radix-icons:double-arrow-left\" class=\"w-4 h-4\"\/>\r\n{% endblock %}\r\n\r\n{% block pagination_previous %}\r\n    {% set attr = attr|default({}) %}\r\n    {% set attr = attr|merge({ href: path, 'data-turbo-action': 'advance' }) %}\r\n\r\n    <twig:ui:button:root {{ ...attr }} variant=\"outline\" class=\"h-8 w-8 p-0\">\r\n        {{ block('pagination_previous_message', theme) }}\r\n    <\/twig:ui:button:root>\r\n{% endblock %}\r\n\r\n{% block pagination_previous_disabled %}\r\n    {% set attr = attr|default({}) %}\r\n\r\n    <twig:ui:button:root {{ ...attr }} variant=\"outline\" class=\"h-8 w-8 p-0\" disabled>\r\n        {{ block('pagination_previous_message', theme) }}\r\n    <\/twig:ui:button:root>\r\n{% endblock %}\r\n\r\n{% block pagination_previous_message %}\r\n    <span class=\"sr-only\">{{ 'Go to previous page'|trans({}, 'KreyuDataTable') }}<\/span>\r\n    <twig:ux:icon name=\"radix-icons:chevron-left\" class=\"w-4 h-4\"\/>\r\n{% endblock %}\r\n\r\n{% block pagination_next %}\r\n    {% set attr = attr|default({}) %}\r\n    {% set attr = attr|merge({ href: path, 'data-turbo-action': 'advance' }) %}\r\n\r\n    <twig:ui:button:root {{ ...attr }} variant=\"outline\" class=\"h-8 w-8 p-0\">\r\n        {{ block('pagination_next_message', theme) }}\r\n    <\/twig:ui:button:root>\r\n{% endblock %}\r\n\r\n{% block pagination_next_disabled %}\r\n    {% set attr = attr|default({}) %}\r\n\r\n    <twig:ui:button:root {{ ...attr }} variant=\"outline\" class=\"h-8 w-8 p-0\" disabled>\r\n        {{ block('pagination_next_message', theme) }}\r\n    <\/twig:ui:button:root>\r\n{% endblock %}\r\n\r\n{% block pagination_next_message %}\r\n    <span class=\"sr-only\">{{ 'Go to next page'|trans({}, 'KreyuDataTable') }}<\/span>\r\n    <twig:ux:icon name=\"radix-icons:chevron-right\" class=\"w-4 h-4\"\/>\r\n{% endblock %}\r\n\r\n{% block pagination_last %}\r\n    {% set attr = attr|default({}) %}\r\n    {% set attr = attr|merge({ href: path, 'data-turbo-action': 'advance' }) %}\r\n\r\n    <twig:ui:button:root {{ ...attr }} variant=\"outline\" class=\"hidden h-8 w-8 p-0 lg:flex\">\r\n        {{ block('pagination_last_message', theme) }}\r\n    <\/twig:ui:button:root>\r\n{% endblock %}\r\n\r\n{% block pagination_last_disabled %}\r\n    {% set attr = attr|default({}) %}\r\n\r\n    <twig:ui:button:root {{ ...attr }} variant=\"outline\" class=\"hidden h-8 w-8 p-0 lg:flex\" disabled>\r\n        {{ block('pagination_last_message', theme) }}\r\n    <\/twig:ui:button:root>\r\n{% endblock %}\r\n\r\n{% block pagination_last_message %}\r\n    <span class=\"sr-only\">{{ 'Go to last page'|trans({}, 'KreyuDataTable') }}<\/span>\r\n    <twig:ux:icon name=\"radix-icons:double-arrow-right\" class=\"w-4 h-4\"\/>\r\n{% endblock %}\r\n\r\n{% block column_checkbox_header %}\r\n    {% set attr = attr|default({}) %}\r\n\r\n    <twig:ui:table:head {{ ...attr }}>\r\n        {% set attrs = stimulus_controller(controllerName='ui--datatable', controllerOutlets={\r\n            'ui--checkbox': '.select-row'\r\n        }) %}\r\n\r\n        {% set attrs = attrs|merge(stimulus_target('ui--datatable', 'selectAll')) %}\r\n\r\n        <twig:ui:checkbox:root {{ ...attrs }} id=\"selectAll\" class=\"translate-y-[2px] select-all\">\r\n            <twig:ui:checkbox:indicator\/>\r\n        <\/twig:ui:checkbox:root>\r\n\r\n        {% set input_attr = {\r\n            'type': 'checkbox',\r\n            'id': 'selectAll',\r\n            'aria-label': 'Select all checkbox',\r\n            'data-identifier-name': identifier_name,\r\n            'data-kreyu--data-table-bundle--batch-target': 'selectAllCheckbox',\r\n            'data-action': 'input->kreyu--data-table-bundle--batch#selectAll',\r\n            'class': 'hidden',\r\n        }|merge(input_attr|default({})) %}\r\n\r\n        <input {% for key, value in input_attr %}{{ key }}=\"{{ value }}\"{% endfor %}>\r\n    <\/twig:ui:table:head>\r\n{% endblock %}\r\n\r\n{% block column_checkbox_value %}\r\n    {% set attrs = stimulus_controller(controllerName='ui--datatable', controllerOutlets={\r\n        'ui--checkbox': '.select-all',\r\n        'ui--datatable': '.select-row'\r\n    }) %}\r\n\r\n    {% set attrs = attrs|merge(stimulus_target('ui--datatable', 'selectRow')) %}\r\n\r\n    <twig:ui:checkbox:root {{ ...attrs }} id=\"{{ row.index }}\" class=\"translate-y-[2px] select-row\">\r\n        <twig:ui:checkbox:indicator\/>\r\n    <\/twig:ui:checkbox:root>\r\n\r\n    {% set input_attr = {\r\n        'type': 'checkbox',\r\n        'value': value,\r\n        'aria-label': 'Select all checkbox',\r\n        'data-index': row.index,\r\n        'id': row.index,\r\n        'data-identifier-name': identifier_name,\r\n        'data-kreyu--data-table-bundle--batch-target': 'selectRowCheckbox',\r\n        'data-action': 'input->kreyu--data-table-bundle--batch#selectRow',\r\n        'class': 'hidden',\r\n    }|merge(input_attr|default({})) %}\r\n\r\n    <input {% with { attr: input_attr } %}{{ block('attributes') }}{% endwith %}>\r\n{% endblock %}\r\n\r\n{% block batch_action_bar %}\r\n    <div data-kreyu--data-table-bundle--batch-target=\"batchActionBar\" hidden>\r\n        <div class=\"flex justify-between items-center\">\r\n            {{ block('batch_action_bar_title', theme) }}\r\n            {{ block('batch_action_bar_actions', theme) }}\r\n        <\/div>\r\n    <\/div>\r\n{% endblock %}\r\n\r\n{% block batch_action_bar_title %}\r\n    {% set wrapper_attr = { class: 'flex-1 text-sm text-muted-foreground' }|merge(wrapper_attr|default({})) %}\r\n\r\n    <div {% with { attr: wrapper_attr } %}{{ block('attributes') }}{% endwith %}>\r\n        {{ 'Selected'|trans({}, 'KreyuDataTable') }}: <span\r\n                data-kreyu--data-table-bundle--batch-target=\"selectedCounter\">0<\/span>\r\n    <\/div>\r\n{% endblock %}\r\n\r\n{% block batch_action_bar_actions %}\r\n    <div class=\"ml-auto flex space-x-2\">\r\n        {% for action in batch_actions %}\r\n            {{ data_table_action(action) }}\r\n        {% endfor %}\r\n    <\/div>\r\n{% endblock %}\r\n\r\n{% block action_form_value %}\r\n    {% set attr = { action, method: html_friendly_method }|merge(attr|default({})) %}\r\n\r\n    {% if confirmation %}\r\n        {% set attr = {\r\n            'aria-haspopup':\"dialog\",\r\n            'aria-expanded':\"false\",\r\n            'data-state':\"closed\",\r\n            'type': 'button'\r\n        }|merge(button_attr) %}\r\n\r\n        {% with { attr, confirm_button_attr: { type: 'submit', form: form_id }, block: 'action_form_value' } %}{{ block('action_confirmation_dialog') }}{% endwith %}\r\n    {% else %}\r\n        {% if batch %}\r\n            {% set attr = { 'data-kreyu--data-table-bundle--batch-target': 'identifierHolder' }|merge(attr) %}\r\n        {% endif %}\r\n\r\n        <form id=\"{{ form_id }}\" {{- block('attributes') -}}>\r\n            {# Reset attributes to prevent bubbling #}\r\n            {% set attr = {} %}\r\n\r\n            <input type=\"hidden\" name=\"_method\" value=\"{{ method }}\"\/>\r\n\r\n            {% set attr = { type: 'submit', variant:'outline' }|merge(button_attr) %}\r\n\r\n            <twig:ui:button:root {{ ...attr }}>\r\n                {{- block('action_value', theme, _context) -}}\r\n            <\/twig:ui:button:root>\r\n        <\/form>\r\n    {% endif %}\r\n{% endblock %}\r\n\r\n{% block action_bar %}\r\n    {% set display_filter_action = filtration_enabled and filters|length > 0 and filtration_form.children|length > 0 %}\r\n    {% set display_export_action = exporting_enabled and exporters|length > 0 %}\r\n\r\n    <div class=\"flex items-center justify-between\">\r\n        <div class=\"flex flex-1 items-center space-x-2\">\r\n\r\n            {% if title or has_active_filters or display_filter_action or display_export_action or personalization_enabled %}\r\n                {% if filtration_enabled and filtration_form and filtration_form.vars.search_fields|length > 0 %}\r\n                    {{ block('action_search') }}\r\n                {% endif %}\r\n\r\n                {% if has_active_filters %}\r\n                    {{ block('active_filters') }}\r\n                {% endif %}\r\n            {% endif %}\r\n        <\/div>\r\n\r\n        <div class=\"ml-auto space-x-2 flex\">\r\n            {% if title or has_active_filters or display_filter_action or display_export_action or personalization_enabled %}\r\n                {% if filtration_enabled and filtration_form and filtration_form.vars.search_fields|length > 0 %}\r\n                    {% for action in actions %}\r\n                        {{ data_table_action(action) }}\r\n                    {% endfor %}\r\n\r\n                    {% if display_filter_action and filtration_enabled and filtration_form and filters|length > 0 %}\r\n                        {% with {filter: block('action_filter')} %}\r\n                            <twig:ui:popover:root placement=\"bottom-end\">\r\n                                <twig:ui:popover:trigger>\r\n                                    {{ filter|raw }}\r\n                                <\/twig:ui:popover:trigger>\r\n                                <twig:ui:popover:content class=\"w-80\">\r\n                                    <div class=\"grid gap-4\">\r\n                                        <div class=\"space-y-2\">\r\n                                            <h4 class=\"font-medium leading-none\">{{ 'Filters'|trans({}, 'KreyuDataTable') }}<\/h4>\r\n                                            <p class=\"text-sm text-muted-foreground\">\r\n                                                {{ 'Filter your data by applying filters.'|trans({}, 'KreyuDataTable') }}\r\n                                            <\/p>\r\n                                        <\/div>\r\n                                        <div class=\"grid gap-2\">\r\n                                            {{ data_table_filters_form(filtration_form) }}\r\n                                        <\/div>\r\n                                    <\/div>\r\n                                <\/twig:ui:popover:content>\r\n                            <\/twig:ui:popover:root>\r\n                        {% endwith %}\r\n                    {% elseif filtration_enabled and filtration_form and filters|length > 0 %}\r\n                        <div class=\"hidden\">\r\n                            {{ data_table_filters_form(filtration_form) }}\r\n                        <\/div>\r\n                    {% endif %}\r\n                {% endif %}\r\n            {% endif %}\r\n        <\/div>\r\n    <\/div>\r\n\r\n    {% if has_batch_actions %}\r\n        {{ block('batch_action_bar', theme) }}\r\n    {% endif %}\r\n{% endblock %}\r\n\r\n{% block action_search %}\r\n    {% for child in filtration_form.vars.search_fields %}\r\n        {{ form_widget(child.value, { attr: { form: filtration_form.vars.id, class: 'w-[150px] lg:w-[250px]' } }) }}\r\n    {% endfor %}\r\n{% endblock %}\r\n\r\n{% block action_filter %}\r\n    {% set attr = {\r\n        'variant': 'outline',\r\n        'size': 'icon',\r\n        'title': 'Filter'|trans({}, 'KreyuDataTable'),\r\n    }|merge(attr|default({})) %}\r\n\r\n    <twig:ui:button:root {{ ...attr }} >\r\n        <twig:ux:icon name=\"solar:filter-outline\" class=\"w-4 h-4\"\/>\r\n    <\/twig:ui:button:root>\r\n{% endblock %}\r\n\r\n{% block column_actions_value %}\r\n    <div class=\"flex items-center space-x-2\">\r\n        {% for action in actions %}\r\n            {{ data_table_action(action) }}\r\n        {% endfor %}\r\n    <\/div>\r\n{% endblock %}\r\n\r\n{% block action_button_value %}\r\n    {% set attr = { href, target, variant: 'outline' }|merge(attr) %}\r\n\r\n    {% if confirmation %}\r\n        {% set attr = {\r\n            'aria-haspopup':\"dialog\",\r\n            'aria-expanded':\"false\",\r\n            'data-state':\"closed\"\r\n        }|merge(attr) %}\r\n\r\n        {% set confirm_button_attr = { href }|merge(confirm_button_attr|default({})) %}\r\n\r\n        {% if batch %}\r\n            {% set confirm_button_attr = {\r\n                'data-kreyu--data-table-bundle--batch-target': 'identifierHolder',\r\n            }|merge(confirm_button_attr) %}\r\n        {% endif %}\r\n\r\n        {% with { attr, confirm_button_attr, block: 'action_button_value' } %}{{ block('action_confirmation_dialog') }}{% endwith %}\r\n    {% else %}\r\n        <twig:ui:button:root {{ ...attr }}>\r\n            {% with { attr: {} } %}{{- block('action_value', theme, _context) -}}{% endwith %}\r\n        <\/twig:ui:button:root>\r\n    {% endif %}\r\n{% endblock %}\r\n\r\n{% block action_confirmation_dialog %}\r\n    {% set dialog_confirm_button_variant = {\r\n        'info': 'default',\r\n        'warning': 'outline',\r\n        'danger': 'destructive',\r\n    }[confirmation.type] %}\r\n\r\n    {% set confirm = confirmation %}\r\n    {% with { attr, confirmation: false, button_attr: attr} %}\r\n        {% with {trigger: block(block)} %}\r\n            <twig:ui:alert-dialog:root>\r\n                <twig:ui:alert-dialog:trigger>\r\n                    {{ trigger|raw }}\r\n                <\/twig:ui:alert-dialog:trigger>\r\n                <twig:ui:alert-dialog:content>\r\n                    <twig:ui:alert-dialog:header>\r\n                        <twig:ui:alert-dialog:title>\r\n                            {{ confirm.label_title|trans({}, confirm.translation_domain) }}\r\n                        <\/twig:ui:alert-dialog:title>\r\n                        <twig:ui:alert-dialog:description>\r\n                            {{ confirm.label_description|trans({}, confirm.translation_domain) }}\r\n                        <\/twig:ui:alert-dialog:description>\r\n                    <\/twig:ui:alert-dialog:header>\r\n                    <twig:ui:alert-dialog:footer>\r\n                        <twig:ui:alert-dialog:cancel variant=\"secondary\">\r\n                            {{ confirm.label_cancel|trans({}, confirm.translation_domain) }}\r\n                        <\/twig:ui:alert-dialog:cancel>\r\n\r\n                        {% set confirm_button_attr = {\r\n                            variant: dialog_confirm_button_variant\r\n                        }|merge(confirm_button_attr|default({})) %}\r\n\r\n                        <twig:ui:alert-dialog:action {{ ...confirm_button_attr }}>\r\n                            {{ confirm.label_confirm|trans({}, confirm.translation_domain) }}\r\n                        <\/twig:ui:alert-dialog:action>\r\n                    <\/twig:ui:alert-dialog:footer>\r\n                <\/twig:ui:alert-dialog:content>\r\n            <\/twig:ui:alert-dialog:root>\r\n        {% endwith %}\r\n    {% endwith %}\r\n{% endblock %}\r\n\r\n{% block action_value_icon %}\r\n    {{ ux_icon(icon_attr.name, icon_attr) }}\r\n{% endblock %}\r\n\r\n{% block table_body_row_no_results %}\r\n    <twig:ui:table:row>\r\n        {% set attrs = {\r\n            colspan: column_count,\r\n            ...table_body_row_no_results_attr|default({ class: 'h-24 text-center' })\r\n        } %}\r\n\r\n        <twig:ui:table:cell {{ ...attrs }}>{{ 'No results found'|trans({}, 'KreyuDataTable') }}<\/twig:ui:table:cell>\r\n    <\/twig:ui:table:row>\r\n{% endblock %}\r\n\r\n{% block kreyu_data_table_filters_form %}\r\n    {{ form_start(form, { attr: { 'data-turbo-action': 'advance', 'hidden': 'hidden' } }) }}\r\n    {# This form should be empty - all its inputs should be on the outside, referenced using the \"form\" attribute #}\r\n    {{ form_end(form, { render_rest: false }) }}\r\n\r\n    {% if form.count > 0 %}\r\n        {{ block('filtration_widget', theme) }}\r\n    {% endif %}\r\n{% endblock %}\r\n\r\n{% block filtration_widget %}\r\n    {{ block('filtration_form', theme) }}\r\n{% endblock %}\r\n\r\n{% block filtration_form %}\r\n    {{ block('filtration_form_content', theme) }}\r\n{% endblock %}\r\n\r\n{% block filtration_form_content %}\r\n    {% for child in form %}\r\n        {{ block('filtration_form_row', theme) }}\r\n    {% endfor %}\r\n\r\n    {{ block('filtration_form_submit', theme) }}\r\n{% endblock %}\r\n\r\n{% block filtration_form_row %}\r\n    {{ form_row(child) }}\r\n{% endblock %}\r\n\r\n{% block filtration_form_submit %}\r\n    <twig:ui:button:root {{ ...attr|default({})|merge({ form: form.vars.id, 'data-turbo-action': 'advance', class: 'w-full mt-4' }) }}>\r\n        {{ 'Filter'|trans({}, 'KreyuDataTable') }}\r\n    <\/twig:ui:button:root>\r\n{% endblock %}\r\n\r\n{% block active_filters %}\r\n    <div class=\"flex items-center space-x-2\">\r\n        {% for filter_name, filter_data in filtration_data.filters|default([])|filter(filter => filter.hasValue()) %}\r\n            {% with { filter: filters[filter_name] } %}\r\n                {{ block('filter_clear_button') }}\r\n            {% endwith %}\r\n        {% endfor %}\r\n\r\n        {% if has_active_filters %}\r\n            {{ block('filter_clear_all_button') }}\r\n        {% endif %}\r\n    <\/div>\r\n{% endblock %}\r\n\r\n{% block filter_clear_button_icon %}\r\n    <twig:ux:icon name=\"radix-icons:cross-2\" class=\"ml-2 h-4 w-4\"\/>\r\n{% endblock %}\r\n\r\n{% block filter_clear_all_button_icon %}\r\n    <twig:ux:icon name=\"radix-icons:trash\" class=\"ml-2 h-5 w-5\"\/>\r\n{% endblock %}\r\n\r\n{% block filter_clear_all_button %}\r\n    {% set attr = {\r\n        'class': 'h-8 px-2 lg:px-3',\r\n        'href': data_table_filter_clear_url(filters),\r\n        'title': 'Clear all filters'|trans({}, 'KreyuDataTable'),\r\n        'data-turbo-action': 'advance',\r\n        'variant': 'ghost'\r\n    }|merge(attr|default({})) %}\r\n\r\n    {% with { icon: block('filter_clear_all_button_icon') } %}\r\n        <twig:ui:button:root {{ ...attr }}>\r\n            Reset\r\n            {{ icon|raw }}\r\n        <\/twig:ui:button:root>\r\n    {% endwith %}\r\n{% endblock %}\r\n\r\n{% block filter_clear_button %}\r\n    {% with {icon: block('filter_clear_button_icon')} %}\r\n        <twig:ui:button:root\r\n                variant=\"outline\"\r\n                size=\"sm\"\r\n                class=\"h-8 border-dashed\"\r\n                href=\"{{ data_table_filter_clear_url(filter) }}\"\r\n                data-turbo-action=\"advance\"\r\n                title=\"{{ 'Clear filter'|trans({}, 'KreyuDataTable') }}\"\r\n        >\r\n            {% if filter.vars.label is not empty %}\r\n                {{ filter.vars.label|trans({}, filter.vars.translation_domain) }}\r\n\r\n                {% if filter.vars.operator_selectable %}\r\n                    <span class=\"text-muted\">{{ filter.vars.data.operator.label|trans({}, 'KreyuDataTable') }}<\/span>\r\n                {% endif %}\r\n\r\n                <div data-orientation=\"vertical\" role=\"none\" class=\"shrink-0 bg-border w-[1px] mx-2 h-4\"><\/div>\r\n            {% endif %}\r\n\r\n            <div class=\"flex items-center space-x-1\">\r\n                <twig:ui:badge:root variant=\"secondary\" class=\"rounded-sm px-1 font-normal\">\r\n                    {{ filter.vars.value|trans({}, filter.vars.translation_domain) }}\r\n                <\/twig:ui:badge:root>\r\n\r\n                {{ icon|raw }}\r\n            <\/div>\r\n        <\/twig:ui:button:root>\r\n    {% endwith %}\r\n{% endblock %}\r\n"
        },
        {
          "name": "datatable_controller.js",
          "dir": "assets\/js\/components\/ui",
          "content": "import {Controller} from \"@hotwired\/stimulus\";\r\nimport '@kanety\/stimulus-static-actions';\r\n\r\nexport default class UIDatatable extends Controller {\r\n    static outlets = ['ui--checkbox', 'ui--datatable']\r\n    static targets = ['selectAll', 'selectRow']\r\n    static actions = [\r\n        ['selectAll', 'click->selectAll'],\r\n        ['selectRow', 'click->selectRow']\r\n    ]\r\n\r\n    selectAll(event) {\r\n        event.preventDefault();\r\n        const state = event.currentTarget.dataset.state;\r\n        this.uiCheckboxOutlets.forEach((checkbox) => {\r\n            this.updateCheckbox(checkbox, state);\r\n        });\r\n    }\r\n\r\n    selectRow(event) {\r\n        event.preventDefault();\r\n\r\n        const checked = this.uiDatatableOutletElements.filter((checkbox) => {\r\n            return checkbox.dataset.state === 'checked';\r\n        });\r\n\r\n        let state = checked.length > 0 ? 'indeterminate' : 'unchecked';\r\n        state = checked.length === this.uiDatatableOutletElements.length ? 'checked' : state;\r\n        this.updateCheckbox(this.uiCheckboxOutlet, state);\r\n    }\r\n\r\n    updateCheckbox(checkbox, state){\r\n        checkbox.state = state;\r\n        checkbox.updateCheckboxAttributes(state);\r\n        checkbox.handleState();\r\n    }\r\n}"
        }
      ],
      "iconDependencies": [
        "radix-icons:arrow-up",
        "radix-icons:arrow-down",
        "radix-icons:caret-sort",
        "radix-icons:double-arrow-left",
        "radix-icons:chevron-left",
        "radix-icons:chevron-right",
        "radix-icons:double-arrow-right",
        "solar:filter-outline",
        "radix-icons:cross-2",
        "radix-icons:trash"
      ],
      "registryDependencies": [
        "table",
        "dropdown-menu",
        "button",
        "checkbox",
        "popover",
        "alert-dialog",
        "badge",
        "form"
      ],
      "dependencies": [
        "@kanety\/stimulus-static-actions"
      ]
    },
    {
      "name": "form",
      "files": [
        {
          "name": "form.html.twig",
          "dir": "templates\/themes",
          "content": "{%- block form_widget -%}\r\n    {% if compound %}\r\n        {{- block('form_widget_compound') -}}\r\n    {% else %}\r\n        {{- block('form_widget_simple') -}}\r\n    {% endif %}\r\n{%- endblock form_widget -%}\r\n\r\n{%- block form_widget_compound -%}\r\n    <div {{ block('widget_container_attributes') }}>\r\n        {%- if form is rootform -%}\r\n            {{ form_errors(form) }}\r\n        {%- endif -%}\r\n        {{- block('form_rows') -}}\r\n        {{- form_rest(form) -}}\r\n    <\/div>\r\n{%- endblock form_widget_compound -%}\r\n\r\n{%- block form_rows -%}\r\n    {% for child in form|filter(child => not child.rendered) %}\r\n        {{- form_row(child, {label: false}) -}}\r\n    {% endfor %}\r\n{%- endblock form_rows -%}\r\n\r\n{% block form_row %}\r\n    {%- if compound is defined and compound -%}\r\n        {%- set element = 'div' -%}\r\n    {%- endif -%}\r\n\r\n    {%- set widget_attr = {} -%}\r\n    {%- if help is not empty -%}\r\n        {%- set widget_attr = {attr: {'aria-describedby': id ~\"_help\"}} -%}\r\n    {%- endif -%}\r\n\r\n    {%- set row_class = row_class|default(row_attr.class|default('space-y-2')|trim) -%}\r\n    <{{ element|default('div') }}{% with {attr: row_attr|merge({class: row_class})} %}{{ block('attributes') }}{% endwith %}>\r\n    {{- form_label(form) -}}\r\n    {{- form_widget(form, widget_attr) -}}\r\n    {{- form_help(form) -}}\r\n    {{- form_errors(form) -}}\r\n    <\/{{ element|default('div') }}>\r\n{% endblock %}\r\n\r\n{% block form_errors %}\r\n    {%- if errors|length > 0 -%}\r\n        <ul>\r\n            {%- for error in errors -%}\r\n                <li class=\"text-[0.8rem] font-medium text-destructive\">{{ error.message }}<\/li>\r\n            {%- endfor -%}\r\n        <\/ul>\r\n    {%- endif -%}\r\n{% endblock %}\r\n\r\n{% block form_help %}\r\n    {%- if help is not empty -%}\r\n        {%- set help_attr = help_attr|merge({class: ([help_attr.class|default(''), 'text-[0.8rem] text-muted-foreground help-text'] | tailwind_merge)|trim }) -%}\r\n\r\n        <p id=\"{{ id }}_help\"{% with { attr: help_attr } %}{{ block('attributes') }}{% endwith %}>\r\n            {{- block('form_help_content') -}}\r\n        <\/p>\r\n    {%- endif -%}\r\n{% endblock %}\r\n\r\n{% block form_widget_simple %}\r\n    {%- set type = type|default('text') -%}\r\n    {%- if type == 'range' or type == 'color' -%}\r\n        {# Attribute \"required\" is not supported #}\r\n        {%- set required = false -%}\r\n    {%- endif -%}\r\n\r\n    {% set attributes = {id, name: full_name} %}\r\n\r\n    {%- if disabled %} {% set attributes = attributes|merge({disabled: 'disabled'}) %} {% endif -%}\r\n    {%- if required %} {% set attributes = attributes|merge({required: 'required'}) %} {% endif -%}\r\n    {%- if value is not empty %} {% set attributes = attributes|merge({value: value}) %} {% endif -%}\r\n\r\n    {%- for attrname, attrvalue in attr -%}\r\n        {%- if attrname in ['placeholder', 'title'] -%}\r\n            {% set attributes = attributes|merge({(attrname): translation_domain is same as(false) or attrvalue is null ? attrvalue : attrvalue|trans(attr_translation_parameters, translation_domain) }) %}\r\n        {%- elseif attrvalue is same as(true) -%}\r\n            {% set attributes = attributes|merge({(attrname): attrname}) %}\r\n        {%- elseif attrvalue is not same as(false) -%}\r\n            {% set attributes = attributes|merge({(attrname): attrvalue}) %}\r\n        {%- endif -%}\r\n    {%- endfor -%}\r\n\r\n    {% if errors|length > 0 %}\r\n        {% set attributes = attributes|merge({class: (attributes.class|default('') ~ ' border border-destructive focus:ring-destructive focus-visible:ring-destructive text-destructive')|trim}) %}\r\n    {% endif %}\r\n\r\n    <twig:ui:input:default {{ ...attributes }} type=\"{{ type }}\"><\/twig:ui:input:default>\r\n{% endblock %}\r\n\r\n{% block form_label %}\r\n    {% if label is not same as(false) -%}\r\n        {% if not compound -%}\r\n            {% set label_attr = label_attr|merge({'for': id}) %}\r\n        {%- endif -%}\r\n\r\n        {% if required -%}\r\n            {% set label_attr = label_attr|merge({'class': (label_attr.class|default('') ~ ' required')|trim}) %}\r\n        {%- endif -%}\r\n\r\n        {% if errors|length > 0 %}\r\n            {% set label_attr = label_attr|merge({'class': (label_attr.class|default('') ~ ' text-destructive')|trim}) %}\r\n        {% endif %}\r\n\r\n        {% set attributes = {} %}\r\n        {%- for attrname, attrvalue in label_attr -%}\r\n            {%- if attrname in ['placeholder', 'title'] -%}\r\n                {% set attributes = attributes|merge({(attrname): translation_domain is same as(false) or attrvalue is null ? attrvalue : attrvalue|trans(attr_translation_parameters, translation_domain) }) %}\r\n            {%- elseif attrvalue is same as(true) -%}\r\n                {% set attributes = attributes|merge({(attrname): attrname}) %}\r\n            {%- elseif attrvalue is not same as(false) -%}\r\n                {% set attributes = attributes|merge({(attrname): attrvalue}) %}\r\n            {%- endif -%}\r\n        {%- endfor -%}\r\n\r\n        <twig:ui:label:root {{ ...attributes }}>\r\n            {{ block(outerBlocks.form_label_content) }}\r\n        <\/twig:ui:label:root>\r\n    {%- endif -%}\r\n{% endblock %}\r\n\r\n{%- block percent_widget -%}\r\n    {%- set type = 'number' -%}\r\n    {{ block('form_widget_simple') }}\r\n{%- endblock percent_widget -%}\r\n\r\n{%- block percent_label -%}\r\n    {%- if label is not same as(false) -%}\r\n        {% set label_attr = label_attr|merge({'for': id}) %}\r\n        {% if required -%}\r\n            {% set label_attr = label_attr|merge({'class': (label_attr.class|default('') ~ ' required')|trim}) %}\r\n        {%- endif -%}\r\n\r\n        {% if errors|length > 0 %}\r\n            {% set label_attr = label_attr|merge({'class': (label_attr.class|default('') ~ ' text-destructive')|trim}) %}\r\n        {% endif %}\r\n\r\n        {% set attributes = {} %}\r\n        {%- for attrname, attrvalue in label_attr -%}\r\n            {%- if attrname in ['placeholder', 'title'] -%}\r\n                {% set attributes = attributes|merge({(attrname): translation_domain is same as(false) or attrvalue is null ? attrvalue : attrvalue|trans(attr_translation_parameters, translation_domain) }) %}\r\n            {%- elseif attrvalue is same as(true) -%}\r\n                {% set attributes = attributes|merge({(attrname): attrname}) %}\r\n            {%- elseif attrvalue is not same as(false) -%}\r\n                {% set attributes = attributes|merge({(attrname): attrvalue}) %}\r\n            {%- endif -%}\r\n        {%- endfor -%}\r\n\r\n        <twig:ui:label:root {{ ...attributes }}>\r\n            {{ block(outerBlocks.form_label_content) }} {% if symbol %}({{ symbol|default('%') }}){% endif %}\r\n        <\/twig:ui:label:root>\r\n    {%- endif -%}\r\n{%- endblock percent_label -%}\r\n\r\n{%- block money_widget -%}\r\n    {%- set type = 'number' -%}\r\n    {{ block('form_widget_simple') }}\r\n{%- endblock money_widget -%}\r\n\r\n{%- block money_label -%}\r\n    {%- if label is not same as(false) -%}\r\n        {% set label_attr = label_attr|merge({'for': id}) %}\r\n        {% if required -%}\r\n            {% set label_attr = label_attr|merge({'class': (label_attr.class|default('') ~ ' required')|trim}) %}\r\n        {%- endif -%}\r\n\r\n        {% if errors|length > 0 %}\r\n            {% set label_attr = label_attr|merge({'class': (label_attr.class|default('') ~ ' text-destructive')|trim}) %}\r\n        {% endif %}\r\n\r\n        {% set attributes = {} %}\r\n        {%- for attrname, attrvalue in label_attr -%}\r\n            {%- if attrname in ['placeholder', 'title'] -%}\r\n                {% set attributes = attributes|merge({(attrname): translation_domain is same as(false) or attrvalue is null ? attrvalue : attrvalue|trans(attr_translation_parameters, translation_domain) }) %}\r\n            {%- elseif attrvalue is same as(true) -%}\r\n                {% set attributes = attributes|merge({(attrname): attrname}) %}\r\n            {%- elseif attrvalue is not same as(false) -%}\r\n                {% set attributes = attributes|merge({(attrname): attrvalue}) %}\r\n            {%- endif -%}\r\n        {%- endfor -%}\r\n\r\n        <twig:ui:label:root {{ ...attributes }}>\r\n            {% set currency = money_pattern[:1] %}\r\n            {{ block(outerBlocks.form_label_content) }} {% if currency %}({{ currency|default('\u20ac') }}){% endif %}\r\n        <\/twig:ui:label:root>\r\n    {%- endif -%}\r\n{%- endblock money_label -%}\r\n\r\n{%- block textarea_widget -%}\r\n    {% set attributes = {id, name: full_name} %}\r\n\r\n    {%- if disabled %} {% set attributes = attributes|merge({disabled: 'disabled'}) %} {% endif -%}\r\n    {%- if required %} {% set attributes = attributes|merge({required: 'required'}) %} {% endif -%}\r\n    {%- if value is not empty %} {% set attributes = attributes|merge({value: value}) %} {% endif -%}\r\n\r\n    {%- for attrname, attrvalue in attr -%}\r\n        {%- if attrname in ['placeholder', 'title'] -%}\r\n            {% set attributes = attributes|merge({(attrname): translation_domain is same as(false) or attrvalue is null ? attrvalue : attrvalue|trans(attr_translation_parameters, translation_domain) }) %}\r\n        {%- elseif attrvalue is same as(true) -%}\r\n            {% set attributes = attributes|merge({(attrname): attrname}) %}\r\n        {%- elseif attrvalue is not same as(false) -%}\r\n            {% set attributes = attributes|merge({(attrname): attrvalue}) %}\r\n        {%- endif -%}\r\n    {%- endfor -%}\r\n\r\n    {% if errors|length > 0 %}\r\n        {% set attributes = attributes|merge({class: (attributes.class|default('') ~ ' border border-destructive focus-visible:ring-destructive text-destructive')|trim}) %}\r\n    {% endif %}\r\n\r\n    <twig:ui:input:textarea {{ ...attributes }}>{{ value }}<\/twig:ui:input:textarea>\r\n{%- endblock textarea_widget -%}\r\n\r\n{%- block choice_widget_collapsed -%}\r\n    {%- if required and placeholder is none and not placeholder_in_choices and not multiple and (attr.size is not defined or attr.size <= 1) -%}\r\n        {% set required = false %}\r\n    {%- endif -%}\r\n\r\n    {% set attrs = {id, name: full_name} %}\r\n    {% if multiple %}{% set attrs = attrs|merge({multiple: true}) %}{% endif %}\r\n    {% if required %}{% set attrs = attrs|merge({required: true}) %}{% endif %}\r\n    {% if disabled %}{% set attrs = attrs|merge({disabled: true}) %}{% endif %}\r\n\r\n    {%- for attrname, attrvalue in attr -%}\r\n        {%- if attrname in ['placeholder', 'title'] -%}\r\n            {% set attrs = attrs|merge({(attrname): translation_domain is same as(false) or attrvalue is null ? attrvalue : attrvalue|trans(attr_translation_parameters, translation_domain) }) %}\r\n        {%- elseif attrvalue is same as(true) -%}\r\n            {% set attrs = attrs|merge({(attrname): attrname}) %}\r\n        {%- elseif attrvalue is not same as(false) -%}\r\n            {% set attrs = attrs|merge({(attrname): attrvalue}) %}\r\n        {%- endif -%}\r\n    {%- endfor -%}\r\n\r\n    {% macro filter_choice(choices, value, choice_translation_domain) %}\r\n        {%- if choices is iterable -%}\r\n            {%- for choice in choices -%}\r\n                {%- if choice is iterable -%}\r\n                    {%- set choices = choice -%}\r\n                    {{- _self.filter_choice(choices, value) -}}\r\n                {%- elseif choice.value == value -%}\r\n                    {{- choice_translation_domain is same as(false) ? choice.label : choice.label|trans(choice.labelTranslationParameters, choice_translation_domain) -}}\r\n                {%- endif -%}\r\n            {%- endfor -%}\r\n        {%- else -%}\r\n            {%- if choices.value == value -%}\r\n                {{- choice_translation_domain is same as(false) ? choices.label : choices.label|trans(choices.labelTranslationParameters, choice_translation_domain) -}}\r\n            {%- endif -%}\r\n        {%- endif -%}\r\n    {%- endmacro %}\r\n\r\n    {% import _self as macros %}\r\n    {% set currentValue = macros.filter_choice(choices, value, choice_translation_domain) %}\r\n\r\n    <twig:ui:select:root {{ ...attrs }}>\r\n        <twig:ui:select:input {{ ...attrs }}\/>\r\n\r\n        {% set triggerAttrs = { class:'w-full' } %}\r\n        {% if errors|length > 0 %}\r\n            {% set triggerAttrs = triggerAttrs|merge({class: (errorAttrs.class|default('w-full') ~ ' border border-destructive focus:ring-destructive text-destructive')|trim}) %}\r\n        {% endif %}\r\n\r\n        <twig:ui:select:trigger {{ ...triggerAttrs }}>\r\n            {% if currentValue is not empty %}\r\n                <twig:ui:select:value\r\n                        placeholder=\"{{ placeholder != '' ? (translation_domain is same as(false) ? placeholder : placeholder|trans({}, translation_domain)) }}\"\r\n                        id=\"{{ attrs.id }}\">\r\n                    {{ currentValue }}\r\n                <\/twig:ui:select:value>\r\n            {% else %}\r\n                <twig:ui:select:value\r\n                        placeholder=\"{{ placeholder != '' ? (translation_domain is same as(false) ? placeholder : placeholder|trans({}, translation_domain)) }}\"\r\n                        id=\"{{ attrs.id }}\"\/>\r\n            {% endif %}\r\n        <\/twig:ui:select:trigger>\r\n\r\n        {% with {content: outerBlocks.choice_widget_options} %}\r\n            <twig:ui:select:content id=\"{{ attrs.id }}\">\r\n                {%- if preferred_choices|length > 0 -%}\r\n                    {% set options = preferred_choices %}\r\n                    {% set render_preferred_choices = true %}\r\n\r\n                    {{- block(content) -}}\r\n\r\n                    {%- if choices|length > 0 and separator is not none -%}\r\n                        <twig:ui:select:separator\/>\r\n                    {%- endif -%}\r\n                {%- endif -%}\r\n                {%- set options = choices -%}\r\n                {%- set render_preferred_choices = false -%}\r\n\r\n                {{- block(content) -}}\r\n            <\/twig:ui:select:content>\r\n        {% endwith %}\r\n    <\/twig:ui:select:root>\r\n{%- endblock choice_widget_collapsed -%}\r\n\r\n{% block choice_widget_options %}\r\n    {% for group_label, choice in options %}\r\n        {%- if choice is iterable -%}\r\n            <twig:ui:select:group>\r\n                {% set options = choice %}\r\n                <twig:ui:select:label>\r\n                    {{ choice_translation_domain is same as(false) ? group_label : group_label|trans({}, choice_translation_domain) }}\r\n                <\/twig:ui:select:label>\r\n                {{- block(content) -}}\r\n            <\/twig:ui:select:group>\r\n        {%- else -%}\r\n            {% set attr = choice.attr %}\r\n            {% if not render_preferred_choices|default(false) and choice is selectedchoice(value) %}\r\n                {% set attr = attr|merge({ selected: 'selected' }) %}\r\n            {% endif %}\r\n            <twig:ui:select:item {{ ...choice.attr }} value=\"{{ choice.value }}\">\r\n                {{ choice_translation_domain is same as(false) ? choice.label : choice.label|trans(choice.labelTranslationParameters, choice_translation_domain) }}\r\n            <\/twig:ui:select:item>\r\n        {%- endif -%}\r\n    {% endfor %}\r\n{% endblock %}\r\n\r\n{% block checkbox_row %}\r\n    {%- set row_attr = row_attr|merge({class: ([row_attr.class|default(''), 'space-y-2'] | tailwind_merge)|trim }) -%}\r\n\r\n    <div{% with {attr: row_attr} %}{{ block('attributes') }}{% endwith %}>\r\n        {{- form_label(form) -}}\r\n        {{- form_errors(form) -}}\r\n    <\/div>\r\n{% endblock %}\r\n\r\n{% block checkbox_label %}\r\n    {% if label is not same as(false) -%}\r\n        {% if not compound -%}\r\n            {% set label_attr = label_attr|merge({'for': id}) %}\r\n        {%- endif -%}\r\n        {% if required -%}\r\n            {% set label_attr = label_attr|merge({'class': (label_attr.class|default('') ~ ' required')|trim}) %}\r\n        {%- endif -%}\r\n\r\n        {% set class = '' %}\r\n        {% if errors|length > 0 %}\r\n            {% set label_attr = label_attr|merge({'class': (label_attr.class|default('') ~ ' text-destructive')|trim}) %}\r\n            {% set class = 'border-destructive data-[state=checked]:bg-destructive data-[state=checked]:text-destructive-foreground' %}\r\n        {% endif %}\r\n\r\n        {% set attributes = {} %}\r\n        {%- for attrname, attrvalue in label_attr -%}\r\n            {%- if attrname in ['placeholder', 'title'] -%}\r\n                {% set attributes = attributes|merge({(attrname): translation_domain is same as(false) or attrvalue is null ? attrvalue : attrvalue|trans(attr_translation_parameters, translation_domain) }) %}\r\n            {%- elseif attrvalue is same as(true) -%}\r\n                {% set attributes = attributes|merge({(attrname): attrname}) %}\r\n            {%- elseif attrvalue is not same as(false) -%}\r\n                {% set attributes = attributes|merge({(attrname): attrvalue}) %}\r\n            {%- endif -%}\r\n        {%- endfor -%}\r\n\r\n        {%- set widget_attr = {} -%}\r\n        {%- if help is not empty -%}\r\n            {%- set widget_attr = {attr: {'aria-describedby': id ~\"_help\"}} -%}\r\n        {%- endif -%}\r\n\r\n        <div class=\"flex flex-row items-start space-x-3 space-y-0\">\r\n            <twig:ui:checkbox:root id=\"{{ id }}\" class=\"{{ class }}\">\r\n                <twig:ui:checkbox:indicator\/>\r\n            <\/twig:ui:checkbox:root>\r\n\r\n            {{- form_widget(form, widget_attr) -}}\r\n            <div class=\"space-y-2 leading-none\">\r\n                <twig:ui:label:root {{ ...attributes }}>\r\n                    {{ block(outerBlocks.form_label_content) }}\r\n                <\/twig:ui:label:root>\r\n                {{- form_help(form) -}}\r\n            <\/div>\r\n        <\/div>\r\n    {%- endif -%}\r\n{% endblock %}\r\n\r\n{%- block checkbox_widget -%}\r\n    <input type=\"checkbox\"\r\n            {{ block('widget_attributes') }}\r\n            {% if checked %} checked=\"checked\"{% endif %}\r\n           aria-hidden=\"true\"\r\n           tabindex=\"-1\"\r\n           style=\"opacity: 0; position: absolute; margin: 0; pointer-events: none;\"\r\n    \/>\r\n{%- endblock checkbox_widget -%}\r\n\r\n{%- block button_row -%}\r\n    {%- set row_attr = row_attr|merge({class: ([row_attr.class|default(''), 'space-y-2'] | tailwind_merge)|trim }) -%}\r\n\r\n    <div{% with {attr: row_attr} %}{{ block('attributes') }}{% endwith %}>\r\n        {{- form_widget(form) -}}\r\n    <\/div>\r\n{%- endblock button_row -%}\r\n\r\n{%- block button_widget -%}\r\n    {%- if label is empty -%}\r\n        {%- if label_format is not empty -%}\r\n            {% set label = label_format|replace({\r\n                '%name%': name,\r\n                '%id%': id,\r\n            }) %}\r\n        {%- elseif label is not same as(false) -%}\r\n            {% set label = name|humanize %}\r\n        {%- endif -%}\r\n    {%- endif -%}\r\n\r\n    {% set attributes = {id, name: full_name} %}\r\n    {% if disabled %}\r\n        {% set attributes = attributes|merge({disabled: 'disabled'}) %}\r\n    {% endif -%}\r\n\r\n    {%- for attrname, attrvalue in attr -%}\r\n        {%- if attrname in ['placeholder', 'title'] -%}\r\n            {% set attributes = attributes|merge({(attrname): translation_domain is same as(false) or attrvalue is null ? attrvalue : attrvalue|trans(attr_translation_parameters, translation_domain) }) %}\r\n        {%- elseif attrvalue is same as(true) -%}\r\n            {% set attributes = attributes|merge({(attrname): attrname}) %}\r\n        {%- elseif attrvalue is not same as(false) -%}\r\n            {% set attributes = attributes|merge({(attrname): attrvalue}) %}\r\n        {%- endif -%}\r\n    {%- endfor -%}\r\n\r\n    <twig:ui:button:root type=\"{{ type|default('button') }}\" {{ ...attributes }}>\r\n        {%- if translation_domain is same as(false) -%}\r\n            {%- if label_html is same as(false) -%}\r\n                {{- label -}}\r\n            {%- else -%}\r\n                {{- label|raw -}}\r\n            {%- endif -%}\r\n        {%- else -%}\r\n            {%- if label_html is same as(false) -%}\r\n                {{- label|trans(label_translation_parameters, translation_domain) -}}\r\n            {%- else -%}\r\n                {{- label|trans(label_translation_parameters, translation_domain)|raw -}}\r\n            {%- endif -%}\r\n        {%- endif -%}\r\n    <\/twig:ui:button:root>\r\n{%- endblock button_widget -%}\r\n\r\n{%- block submit_widget -%}\r\n    {%- set type = type|default('submit') -%}\r\n    {{ block('button_widget') }}\r\n{%- endblock submit_widget -%}\r\n\r\n{%- block reset_widget -%}\r\n    {%- set type = type|default('reset') -%}\r\n    {{ block('button_widget') }}\r\n{%- endblock reset_widget -%}"
        }
      ],
      "iconDependencies": [],
      "registryDependencies": [
        "input",
        "label",
        "select",
        "checkbox",
        "button"
      ],
      "dependencies": []
    }
  ]
]